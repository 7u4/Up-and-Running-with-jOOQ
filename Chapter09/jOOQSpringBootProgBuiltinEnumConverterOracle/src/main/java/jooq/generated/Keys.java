/*
 * This file is generated by jOOQ.
 */
package jooq.generated;


import javax.annotation.processing.Generated;

import jooq.generated.tables.BankTransaction;
import jooq.generated.tables.Customer;
import jooq.generated.tables.Customerdetail;
import jooq.generated.tables.Department;
import jooq.generated.tables.Employee;
import jooq.generated.tables.Manager;
import jooq.generated.tables.Office;
import jooq.generated.tables.OfficeHasManager;
import jooq.generated.tables.Order;
import jooq.generated.tables.Orderdetail;
import jooq.generated.tables.Payment;
import jooq.generated.tables.Paymentdetail;
import jooq.generated.tables.Product;
import jooq.generated.tables.Productline;
import jooq.generated.tables.Productlinedetail;
import jooq.generated.tables.Sale;
import jooq.generated.tables.Top3product;
import jooq.generated.tables.records.BankTransactionRecord;
import jooq.generated.tables.records.CustomerRecord;
import jooq.generated.tables.records.CustomerdetailRecord;
import jooq.generated.tables.records.DepartmentRecord;
import jooq.generated.tables.records.EmployeeRecord;
import jooq.generated.tables.records.ManagerRecord;
import jooq.generated.tables.records.OfficeHasManagerRecord;
import jooq.generated.tables.records.OfficeRecord;
import jooq.generated.tables.records.OrderRecord;
import jooq.generated.tables.records.OrderdetailRecord;
import jooq.generated.tables.records.PaymentRecord;
import jooq.generated.tables.records.PaymentdetailRecord;
import jooq.generated.tables.records.ProductRecord;
import jooq.generated.tables.records.ProductlineRecord;
import jooq.generated.tables.records.ProductlinedetailRecord;
import jooq.generated.tables.records.SaleRecord;
import jooq.generated.tables.records.Top3productRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * SYSTEM.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BankTransactionRecord> SYS_C0013912 = Internal.createUniqueKey(BankTransaction.BANK_TRANSACTION, DSL.name("SYS_C0013912"), new TableField[] { BankTransaction.BANK_TRANSACTION.TRANSACTION_ID }, true);
    public static final UniqueKey<CustomerRecord> SYS_C0013846 = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("SYS_C0013846"), new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final UniqueKey<CustomerdetailRecord> SYS_C0013850 = Internal.createUniqueKey(Customerdetail.CUSTOMERDETAIL, DSL.name("SYS_C0013850"), new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, true);
    public static final UniqueKey<DepartmentRecord> SYS_C0013857 = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("SYS_C0013857"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<EmployeeRecord> SYS_C0013831 = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("SYS_C0013831"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final UniqueKey<ManagerRecord> SYS_C0013862 = Internal.createUniqueKey(Manager.MANAGER, DSL.name("SYS_C0013862"), new TableField[] { Manager.MANAGER.MANAGER_ID }, true);
    public static final UniqueKey<OfficeRecord> SYS_C0013822 = Internal.createUniqueKey(Office.OFFICE, DSL.name("SYS_C0013822"), new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final UniqueKey<OfficeHasManagerRecord> OFFICES_MANAGERS_PKEY = Internal.createUniqueKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("OFFICES_MANAGERS_PKEY"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE, OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, true);
    public static final UniqueKey<OrderRecord> SYS_C0013886 = Internal.createUniqueKey(Order.ORDER, DSL.name("SYS_C0013886"), new TableField[] { Order.ORDER.ORDER_ID }, true);
    public static final UniqueKey<OrderdetailRecord> SYS_C0013893 = Internal.createUniqueKey(Orderdetail.ORDERDETAIL, DSL.name("SYS_C0013893"), new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID, Orderdetail.ORDERDETAIL.PRODUCT_ID }, true);
    public static final UniqueKey<PaymentRecord> SYS_C0013903 = Internal.createUniqueKey(Payment.PAYMENT, DSL.name("SYS_C0013903"), new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER, Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final UniqueKey<PaymentRecord> UNIQUE_CHECK_NUMBER = Internal.createUniqueKey(Payment.PAYMENT, DSL.name("UNIQUE_CHECK_NUMBER"), new TableField[] { Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final UniqueKey<PaymentdetailRecord> SYS_C008049 = Internal.createUniqueKey(Paymentdetail.PAYMENTDETAIL, DSL.name("SYS_C008049"), new TableField[] { Paymentdetail.PAYMENTDETAIL.CUSTOMER_NUMBER, Paymentdetail.PAYMENTDETAIL.CHECK_NUMBER }, true);
    public static final UniqueKey<ProductRecord> SYS_C0013879 = Internal.createUniqueKey(Product.PRODUCT, DSL.name("SYS_C0013879"), new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
    public static final UniqueKey<ProductlineRecord> SYS_C0013869 = Internal.createUniqueKey(Productline.PRODUCTLINE, DSL.name("SYS_C0013869"), new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE, Productline.PRODUCTLINE.CODE }, true);
    public static final UniqueKey<ProductlineRecord> UNIQUE_PRODUCT_LINE = Internal.createUniqueKey(Productline.PRODUCTLINE, DSL.name("UNIQUE_PRODUCT_LINE"), new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final UniqueKey<ProductlinedetailRecord> SYS_C0013874 = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("SYS_C0013874"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, true);
    public static final UniqueKey<ProductlinedetailRecord> UNIQUE_PRODUCT_LINE_DETAIL = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("UNIQUE_PRODUCT_LINE_DETAIL"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, true);
    public static final UniqueKey<SaleRecord> SYS_C0013839 = Internal.createUniqueKey(Sale.SALE, DSL.name("SYS_C0013839"), new TableField[] { Sale.SALE.SALE_ID }, true);
    public static final UniqueKey<Top3productRecord> SYS_C0013897 = Internal.createUniqueKey(Top3product.TOP3PRODUCT, DSL.name("SYS_C0013897"), new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BankTransactionRecord, PaymentRecord> BANK_TRANSACTION_IBFK_1 = Internal.createForeignKey(BankTransaction.BANK_TRANSACTION, DSL.name("BANK_TRANSACTION_IBFK_1"), new TableField[] { BankTransaction.BANK_TRANSACTION.CUSTOMER_NUMBER, BankTransaction.BANK_TRANSACTION.CHECK_NUMBER }, Keys.SYS_C0013903, new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER, Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final ForeignKey<CustomerRecord, EmployeeRecord> CUSTOMERS_IBFK_1 = Internal.createForeignKey(Customer.CUSTOMER, DSL.name("CUSTOMERS_IBFK_1"), new TableField[] { Customer.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER }, Keys.SYS_C0013831, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<CustomerdetailRecord, CustomerRecord> CUSTOMERS_DETAILS_IBFK_1 = Internal.createForeignKey(Customerdetail.CUSTOMERDETAIL, DSL.name("CUSTOMERS_DETAILS_IBFK_1"), new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, Keys.SYS_C0013846, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<DepartmentRecord, OfficeRecord> DEPARTMENT_IBFK_1 = Internal.createForeignKey(Department.DEPARTMENT, DSL.name("DEPARTMENT_IBFK_1"), new TableField[] { Department.DEPARTMENT.OFFICE_CODE }, Keys.SYS_C0013822, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<EmployeeRecord, EmployeeRecord> EMPLOYEES_IBFK_1 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("EMPLOYEES_IBFK_1"), new TableField[] { Employee.EMPLOYEE.REPORTS_TO }, Keys.SYS_C0013831, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<EmployeeRecord, OfficeRecord> EMPLOYEES_IBFK_2 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("EMPLOYEES_IBFK_2"), new TableField[] { Employee.EMPLOYEE.OFFICE_CODE }, Keys.SYS_C0013822, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<OfficeHasManagerRecord, OfficeRecord> SYS_C0013864 = Internal.createForeignKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("SYS_C0013864"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE }, Keys.SYS_C0013822, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<OfficeHasManagerRecord, ManagerRecord> SYS_C0013865 = Internal.createForeignKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("SYS_C0013865"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, Keys.SYS_C0013862, new TableField[] { Manager.MANAGER.MANAGER_ID }, true);
    public static final ForeignKey<OrderRecord, CustomerRecord> ORDERS_IBFK_1 = Internal.createForeignKey(Order.ORDER, DSL.name("ORDERS_IBFK_1"), new TableField[] { Order.ORDER.CUSTOMER_NUMBER }, Keys.SYS_C0013846, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<OrderdetailRecord, OrderRecord> ORDERDETAILS_IBFK_1 = Internal.createForeignKey(Orderdetail.ORDERDETAIL, DSL.name("ORDERDETAILS_IBFK_1"), new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID }, Keys.SYS_C0013886, new TableField[] { Order.ORDER.ORDER_ID }, true);
    public static final ForeignKey<OrderdetailRecord, ProductRecord> ORDERDETAILS_IBFK_2 = Internal.createForeignKey(Orderdetail.ORDERDETAIL, DSL.name("ORDERDETAILS_IBFK_2"), new TableField[] { Orderdetail.ORDERDETAIL.PRODUCT_ID }, Keys.SYS_C0013879, new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
    public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENTS_IBFK_1 = Internal.createForeignKey(Payment.PAYMENT, DSL.name("PAYMENTS_IBFK_1"), new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER }, Keys.SYS_C0013846, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<ProductRecord, ProductlineRecord> PRODUCTS_IBFK_1 = Internal.createForeignKey(Product.PRODUCT, DSL.name("PRODUCTS_IBFK_1"), new TableField[] { Product.PRODUCT.PRODUCT_LINE }, Keys.UNIQUE_PRODUCT_LINE, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL_IBFK_1 = Internal.createForeignKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("PRODUCTLINEDETAIL_IBFK_1"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, Keys.SYS_C0013869, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE, Productline.PRODUCTLINE.CODE }, true);
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL_IBFK_2 = Internal.createForeignKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("PRODUCTLINEDETAIL_IBFK_2"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, Keys.UNIQUE_PRODUCT_LINE, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final ForeignKey<SaleRecord, EmployeeRecord> SALES_IBFK_1 = Internal.createForeignKey(Sale.SALE, DSL.name("SALES_IBFK_1"), new TableField[] { Sale.SALE.EMPLOYEE_NUMBER }, Keys.SYS_C0013831, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<Top3productRecord, ProductRecord> TOP3PRODUCT_IBFK_1 = Internal.createForeignKey(Top3product.TOP3PRODUCT, DSL.name("TOP3PRODUCT_IBFK_1"), new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, Keys.SYS_C0013879, new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
}
