/*
 * This file is generated by jOOQ.
 */
package jooq.generated;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import jooq.generated.tables.BankTransaction;
import jooq.generated.tables.Customer;
import jooq.generated.tables.Customerdetail;
import jooq.generated.tables.Department;
import jooq.generated.tables.Employee;
import jooq.generated.tables.Manager;
import jooq.generated.tables.Office;
import jooq.generated.tables.OfficeHasManager;
import jooq.generated.tables.Order;
import jooq.generated.tables.Orderdetail;
import jooq.generated.tables.Payment;
import jooq.generated.tables.Product;
import jooq.generated.tables.Productline;
import jooq.generated.tables.Productlinedetail;
import jooq.generated.tables.Sale;
import jooq.generated.tables.Top3product;
import jooq.generated.tables.TopThreeSalesPerEmployee;
import jooq.generated.tables.records.TopThreeSalesPerEmployeeRecord;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dbo extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>classicmodels.dbo</code>
     */
    public static final Dbo DBO = new Dbo();

    /**
     * The table <code>classicmodels.dbo.bank_transaction</code>.
     */
    public final BankTransaction BANK_TRANSACTION = BankTransaction.BANK_TRANSACTION;

    /**
     * The table <code>classicmodels.dbo.customer</code>.
     */
    public final Customer CUSTOMER = Customer.CUSTOMER;

    /**
     * The table <code>classicmodels.dbo.customerdetail</code>.
     */
    public final Customerdetail CUSTOMERDETAIL = Customerdetail.CUSTOMERDETAIL;

    /**
     * The table <code>classicmodels.dbo.department</code>.
     */
    public final Department DEPARTMENT = Department.DEPARTMENT;

    /**
     * The table <code>classicmodels.dbo.employee</code>.
     */
    public final Employee EMPLOYEE = Employee.EMPLOYEE;

    /**
     * The table <code>classicmodels.dbo.manager</code>.
     */
    public final Manager MANAGER = Manager.MANAGER;

    /**
     * The table <code>classicmodels.dbo.office</code>.
     */
    public final Office OFFICE = Office.OFFICE;

    /**
     * The table <code>classicmodels.dbo.office_has_manager</code>.
     */
    public final OfficeHasManager OFFICE_HAS_MANAGER = OfficeHasManager.OFFICE_HAS_MANAGER;

    /**
     * The table <code>classicmodels.dbo.order</code>.
     */
    public final Order ORDER = Order.ORDER;

    /**
     * The table <code>classicmodels.dbo.orderdetail</code>.
     */
    public final Orderdetail ORDERDETAIL = Orderdetail.ORDERDETAIL;

    /**
     * The table <code>classicmodels.dbo.payment</code>.
     */
    public final Payment PAYMENT = Payment.PAYMENT;

    /**
     * The table <code>classicmodels.dbo.product</code>.
     */
    public final Product PRODUCT = Product.PRODUCT;

    /**
     * The table <code>classicmodels.dbo.productline</code>.
     */
    public final Productline PRODUCTLINE = Productline.PRODUCTLINE;

    /**
     * The table <code>classicmodels.dbo.productlinedetail</code>.
     */
    public final Productlinedetail PRODUCTLINEDETAIL = Productlinedetail.PRODUCTLINEDETAIL;

    /**
     * The table <code>classicmodels.dbo.sale</code>.
     */
    public final Sale SALE = Sale.SALE;

    /**
     * The table <code>classicmodels.dbo.top3product</code>.
     */
    public final Top3product TOP3PRODUCT = Top3product.TOP3PRODUCT;

    /**
     * The table <code>classicmodels.dbo.top_three_sales_per_employee</code>.
     */
    public final TopThreeSalesPerEmployee TOP_THREE_SALES_PER_EMPLOYEE = TopThreeSalesPerEmployee.TOP_THREE_SALES_PER_EMPLOYEE;

    /**
     * Call <code>classicmodels.dbo.top_three_sales_per_employee</code>.
     */
    public static Result<TopThreeSalesPerEmployeeRecord> TOP_THREE_SALES_PER_EMPLOYEE(
          Configuration configuration
        , Long employeeNr
    ) {
        return configuration.dsl().selectFrom(jooq.generated.tables.TopThreeSalesPerEmployee.TOP_THREE_SALES_PER_EMPLOYEE.call(
              employeeNr
        )).fetch();
    }

    /**
     * Get <code>classicmodels.dbo.top_three_sales_per_employee</code> as a table.
     */
    public static TopThreeSalesPerEmployee TOP_THREE_SALES_PER_EMPLOYEE(
          Long employeeNr
    ) {
        return jooq.generated.tables.TopThreeSalesPerEmployee.TOP_THREE_SALES_PER_EMPLOYEE.call(
              employeeNr
        );
    }

    /**
     * Get <code>classicmodels.dbo.top_three_sales_per_employee</code> as a table.
     */
    public static TopThreeSalesPerEmployee TOP_THREE_SALES_PER_EMPLOYEE(
          Field<Long> employeeNr
    ) {
        return jooq.generated.tables.TopThreeSalesPerEmployee.TOP_THREE_SALES_PER_EMPLOYEE.call(
              employeeNr
        );
    }

    /**
     * No further instances allowed
     */
    private Dbo() {
        super("dbo", null);
    }


    @Override
    public Catalog getCatalog() {
        return Classicmodels.CLASSICMODELS;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            BankTransaction.BANK_TRANSACTION,
            Customer.CUSTOMER,
            Customerdetail.CUSTOMERDETAIL,
            Department.DEPARTMENT,
            Employee.EMPLOYEE,
            Manager.MANAGER,
            Office.OFFICE,
            OfficeHasManager.OFFICE_HAS_MANAGER,
            Order.ORDER,
            Orderdetail.ORDERDETAIL,
            Payment.PAYMENT,
            Product.PRODUCT,
            Productline.PRODUCTLINE,
            Productlinedetail.PRODUCTLINEDETAIL,
            Sale.SALE,
            Top3product.TOP3PRODUCT,
            TopThreeSalesPerEmployee.TOP_THREE_SALES_PER_EMPLOYEE);
    }
}
