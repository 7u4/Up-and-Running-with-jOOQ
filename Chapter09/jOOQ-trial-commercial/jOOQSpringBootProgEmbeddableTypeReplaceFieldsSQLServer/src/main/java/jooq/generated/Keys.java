/*
 * This file is generated by jOOQ.
 */
package jooq.generated;


import javax.annotation.processing.Generated;

import jooq.generated.tables.BankTransaction;
import jooq.generated.tables.Customer;
import jooq.generated.tables.Customerdetail;
import jooq.generated.tables.Department;
import jooq.generated.tables.Employee;
import jooq.generated.tables.Manager;
import jooq.generated.tables.Office;
import jooq.generated.tables.OfficeHasManager;
import jooq.generated.tables.Order;
import jooq.generated.tables.Orderdetail;
import jooq.generated.tables.Payment;
import jooq.generated.tables.Product;
import jooq.generated.tables.Productline;
import jooq.generated.tables.Productlinedetail;
import jooq.generated.tables.Sale;
import jooq.generated.tables.Top3product;
import jooq.generated.tables.records.BankTransactionRecord;
import jooq.generated.tables.records.CustomerRecord;
import jooq.generated.tables.records.CustomerdetailRecord;
import jooq.generated.tables.records.DepartmentRecord;
import jooq.generated.tables.records.EmployeeRecord;
import jooq.generated.tables.records.ManagerRecord;
import jooq.generated.tables.records.OfficeHasManagerRecord;
import jooq.generated.tables.records.OfficeRecord;
import jooq.generated.tables.records.OrderRecord;
import jooq.generated.tables.records.OrderdetailRecord;
import jooq.generated.tables.records.PaymentRecord;
import jooq.generated.tables.records.ProductRecord;
import jooq.generated.tables.records.ProductlineRecord;
import jooq.generated.tables.records.ProductlinedetailRecord;
import jooq.generated.tables.records.SaleRecord;
import jooq.generated.tables.records.Top3productRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * dbo.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BankTransactionRecord> BANK_TRANSACTION__PK__BANK_TRA__85C600AF3241DF31 = Internal.createUniqueKey(BankTransaction.BANK_TRANSACTION, DSL.name("PK__bank_tra__85C600AF3241DF31"), new TableField[] { BankTransaction.BANK_TRANSACTION.TRANSACTION_ID }, true);
    public static final UniqueKey<CustomerRecord> CUSTOMER__PK__CUSTOMER__F38611D58513486A = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("PK__customer__F38611D58513486A"), new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final UniqueKey<CustomerdetailRecord> CUSTOMERDETAIL__PK__CUSTOMER__F38611D5AEC4AD8A = Internal.createUniqueKey(Customerdetail.CUSTOMERDETAIL, DSL.name("PK__customer__F38611D5AEC4AD8A"), new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, true);
    public static final UniqueKey<DepartmentRecord> DEPARTMENT__PK__DEPARTME__C223242278CE6AC8 = Internal.createUniqueKey(Department.DEPARTMENT, DSL.name("PK__departme__C223242278CE6AC8"), new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
    public static final UniqueKey<EmployeeRecord> EMPLOYEE__PK__EMPLOYEE__8C453B0C30D6925D = Internal.createUniqueKey(Employee.EMPLOYEE, DSL.name("PK__employee__8C453B0C30D6925D"), new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final UniqueKey<ManagerRecord> MANAGER__PK__MANAGER__5A6073FC2B66DF92 = Internal.createUniqueKey(Manager.MANAGER, DSL.name("PK__manager__5A6073FC2B66DF92"), new TableField[] { Manager.MANAGER.MANAGER_ID }, true);
    public static final UniqueKey<OfficeRecord> OFFICE__PK__OFFICE__2165C1FC8E96B0CB = Internal.createUniqueKey(Office.OFFICE, DSL.name("PK__office__2165C1FC8E96B0CB"), new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final UniqueKey<OfficeHasManagerRecord> OFFICE_HAS_MANAGER__OFFICES_MANAGERS_PKEY = Internal.createUniqueKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("offices_managers_pkey"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE, OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, true);
    public static final UniqueKey<OrderRecord> ORDER__PK__ORDER__46596229BA7C9E64 = Internal.createUniqueKey(Order.ORDER, DSL.name("PK__order__46596229BA7C9E64"), new TableField[] { Order.ORDER.ORDER_ID }, true);
    public static final UniqueKey<OrderdetailRecord> ORDERDETAIL__PK__ORDERDET__022945F6F2F39519 = Internal.createUniqueKey(Orderdetail.ORDERDETAIL, DSL.name("PK__orderdet__022945F6F2F39519"), new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID, Orderdetail.ORDERDETAIL.PRODUCT_ID }, true);
    public static final UniqueKey<PaymentRecord> PAYMENT__PK__PAYMENT__024293FC8CF7FF70 = Internal.createUniqueKey(Payment.PAYMENT, DSL.name("PK__payment__024293FC8CF7FF70"), new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER, Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final UniqueKey<PaymentRecord> PAYMENT__UNIQUE_CHECK_NUMBER = Internal.createUniqueKey(Payment.PAYMENT, DSL.name("unique_check_number"), new TableField[] { Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final UniqueKey<ProductRecord> PRODUCT__PK__PRODUCT__47027DF5FF2ABAC4 = Internal.createUniqueKey(Product.PRODUCT, DSL.name("PK__product__47027DF5FF2ABAC4"), new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
    public static final UniqueKey<ProductlineRecord> PRODUCTLINE__PK__PRODUCTL__B45DC9CD638DDF7D = Internal.createUniqueKey(Productline.PRODUCTLINE, DSL.name("PK__productl__B45DC9CD638DDF7D"), new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE, Productline.PRODUCTLINE.CODE }, true);
    public static final UniqueKey<ProductlineRecord> PRODUCTLINE__UNIQUE_PRODUCT_LINE = Internal.createUniqueKey(Productline.PRODUCTLINE, DSL.name("unique_product_line"), new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final UniqueKey<ProductlinedetailRecord> PRODUCTLINEDETAIL__PK__PRODUCTL__B45DC9CD5D823647 = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("PK__productl__B45DC9CD5D823647"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, true);
    public static final UniqueKey<ProductlinedetailRecord> PRODUCTLINEDETAIL__UNIQUE_PRODUCT_LINE_DETAIL = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("unique_product_line_detail"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, true);
    public static final UniqueKey<SaleRecord> SALE__PK__SALE__E1EB00B274D75B63 = Internal.createUniqueKey(Sale.SALE, DSL.name("PK__sale__E1EB00B274D75B63"), new TableField[] { Sale.SALE.SALE_ID }, true);
    public static final UniqueKey<Top3productRecord> TOP3PRODUCT__PK__TOP3PROD__47027DF5E71E3CF8 = Internal.createUniqueKey(Top3product.TOP3PRODUCT, DSL.name("PK__top3prod__47027DF5E71E3CF8"), new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BankTransactionRecord, PaymentRecord> BANK_TRANSACTION_IBFK_1 = Internal.createForeignKey(BankTransaction.BANK_TRANSACTION, DSL.name("bank_transaction_ibfk_1"), new TableField[] { BankTransaction.BANK_TRANSACTION.CUSTOMER_NUMBER, BankTransaction.BANK_TRANSACTION.CHECK_NUMBER }, Keys.PAYMENT__PK__PAYMENT__024293FC8CF7FF70, new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER, Payment.PAYMENT.CHECK_NUMBER }, true);
    public static final ForeignKey<CustomerRecord, EmployeeRecord> CUSTOMERS_IBFK_1 = Internal.createForeignKey(Customer.CUSTOMER, DSL.name("customers_ibfk_1"), new TableField[] { Customer.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER }, Keys.EMPLOYEE__PK__EMPLOYEE__8C453B0C30D6925D, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<CustomerdetailRecord, CustomerRecord> CUSTOMERS_DETAILS_IBFK_1 = Internal.createForeignKey(Customerdetail.CUSTOMERDETAIL, DSL.name("customers_details_ibfk_1"), new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, Keys.CUSTOMER__PK__CUSTOMER__F38611D58513486A, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<DepartmentRecord, OfficeRecord> DEPARTMENT_IBFK_1 = Internal.createForeignKey(Department.DEPARTMENT, DSL.name("department_ibfk_1"), new TableField[] { Department.DEPARTMENT.OFFICE_CODE }, Keys.OFFICE__PK__OFFICE__2165C1FC8E96B0CB, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<EmployeeRecord, EmployeeRecord> EMPLOYEES_IBFK_1 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("employees_ibfk_1"), new TableField[] { Employee.EMPLOYEE.REPORTS_TO }, Keys.EMPLOYEE__PK__EMPLOYEE__8C453B0C30D6925D, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<EmployeeRecord, OfficeRecord> EMPLOYEES_IBFK_2 = Internal.createForeignKey(Employee.EMPLOYEE, DSL.name("employees_ibfk_2"), new TableField[] { Employee.EMPLOYEE.OFFICE_CODE }, Keys.OFFICE__PK__OFFICE__2165C1FC8E96B0CB, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<OfficeHasManagerRecord, ManagerRecord> FK__OFFICE_HA__MANAG__5070F446 = Internal.createForeignKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("FK__office_ha__manag__5070F446"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, Keys.MANAGER__PK__MANAGER__5A6073FC2B66DF92, new TableField[] { Manager.MANAGER.MANAGER_ID }, true);
    public static final ForeignKey<OfficeHasManagerRecord, OfficeRecord> FK__OFFICE_HA__OFFIC__4F7CD00D = Internal.createForeignKey(OfficeHasManager.OFFICE_HAS_MANAGER, DSL.name("FK__office_ha__offic__4F7CD00D"), new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE }, Keys.OFFICE__PK__OFFICE__2165C1FC8E96B0CB, new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
    public static final ForeignKey<OrderRecord, CustomerRecord> ORDERS_IBFK_1 = Internal.createForeignKey(Order.ORDER, DSL.name("orders_ibfk_1"), new TableField[] { Order.ORDER.CUSTOMER_NUMBER }, Keys.CUSTOMER__PK__CUSTOMER__F38611D58513486A, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<OrderdetailRecord, OrderRecord> ORDERDETAILS_IBFK_1 = Internal.createForeignKey(Orderdetail.ORDERDETAIL, DSL.name("orderdetails_ibfk_1"), new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID }, Keys.ORDER__PK__ORDER__46596229BA7C9E64, new TableField[] { Order.ORDER.ORDER_ID }, true);
    public static final ForeignKey<OrderdetailRecord, ProductRecord> ORDERDETAILS_IBFK_2 = Internal.createForeignKey(Orderdetail.ORDERDETAIL, DSL.name("orderdetails_ibfk_2"), new TableField[] { Orderdetail.ORDERDETAIL.PRODUCT_ID }, Keys.PRODUCT__PK__PRODUCT__47027DF5FF2ABAC4, new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
    public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENTS_IBFK_1 = Internal.createForeignKey(Payment.PAYMENT, DSL.name("payments_ibfk_1"), new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER }, Keys.CUSTOMER__PK__CUSTOMER__F38611D58513486A, new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
    public static final ForeignKey<ProductRecord, ProductlineRecord> PRODUCTS_IBFK_1 = Internal.createForeignKey(Product.PRODUCT, DSL.name("products_ibfk_1"), new TableField[] { Product.PRODUCT.PRODUCT_LINE }, Keys.PRODUCTLINE__UNIQUE_PRODUCT_LINE, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL_IBFK_1 = Internal.createForeignKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("productlinedetail_ibfk_1"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, Keys.PRODUCTLINE__PK__PRODUCTL__B45DC9CD638DDF7D, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE, Productline.PRODUCTLINE.CODE }, true);
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL_IBFK_2 = Internal.createForeignKey(Productlinedetail.PRODUCTLINEDETAIL, DSL.name("productlinedetail_ibfk_2"), new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, Keys.PRODUCTLINE__UNIQUE_PRODUCT_LINE, new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
    public static final ForeignKey<SaleRecord, EmployeeRecord> SALES_IBFK_1 = Internal.createForeignKey(Sale.SALE, DSL.name("sales_ibfk_1"), new TableField[] { Sale.SALE.EMPLOYEE_NUMBER }, Keys.EMPLOYEE__PK__EMPLOYEE__8C453B0C30D6925D, new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
    public static final ForeignKey<Top3productRecord, ProductRecord> TOP3PRODUCT_IBFK_1 = Internal.createForeignKey(Top3product.TOP3PRODUCT, DSL.name("top3product_ibfk_1"), new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, Keys.PRODUCT__PK__PRODUCT__47027DF5FF2ABAC4, new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
}
