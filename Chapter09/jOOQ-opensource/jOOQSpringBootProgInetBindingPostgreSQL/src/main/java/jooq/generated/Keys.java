/*
 * This file is generated by jOOQ.
 */
package jooq.generated;


import javax.annotation.processing.Generated;

import jooq.generated.tables.BankTransaction;
import jooq.generated.tables.Customer;
import jooq.generated.tables.Customerdetail;
import jooq.generated.tables.Department;
import jooq.generated.tables.Employee;
import jooq.generated.tables.Manager;
import jooq.generated.tables.Office;
import jooq.generated.tables.OfficeHasManager;
import jooq.generated.tables.Order;
import jooq.generated.tables.Orderdetail;
import jooq.generated.tables.Payment;
import jooq.generated.tables.Product;
import jooq.generated.tables.Productline;
import jooq.generated.tables.Productlinedetail;
import jooq.generated.tables.Sale;
import jooq.generated.tables.Top3product;
import jooq.generated.tables.records.BankTransactionRecord;
import jooq.generated.tables.records.CustomerRecord;
import jooq.generated.tables.records.CustomerdetailRecord;
import jooq.generated.tables.records.DepartmentRecord;
import jooq.generated.tables.records.EmployeeRecord;
import jooq.generated.tables.records.ManagerRecord;
import jooq.generated.tables.records.OfficeHasManagerRecord;
import jooq.generated.tables.records.OfficeRecord;
import jooq.generated.tables.records.OrderRecord;
import jooq.generated.tables.records.OrderdetailRecord;
import jooq.generated.tables.records.PaymentRecord;
import jooq.generated.tables.records.ProductRecord;
import jooq.generated.tables.records.ProductlineRecord;
import jooq.generated.tables.records.ProductlinedetailRecord;
import jooq.generated.tables.records.SaleRecord;
import jooq.generated.tables.records.Top3productRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4",
        "schema version:1.1"
    },
    date = "2020-12-28T06:34:31.202Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BankTransactionRecord, Integer> IDENTITY_BANK_TRANSACTION = Identities0.IDENTITY_BANK_TRANSACTION;
    public static final Identity<CustomerRecord, Long> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = Identities0.IDENTITY_DEPARTMENT;
    public static final Identity<ManagerRecord, Long> IDENTITY_MANAGER = Identities0.IDENTITY_MANAGER;
    public static final Identity<OrderRecord, Long> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;
    public static final Identity<ProductRecord, Long> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;
    public static final Identity<SaleRecord, Long> IDENTITY_SALE = Identities0.IDENTITY_SALE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BankTransactionRecord> BANK_TRANSACTION_PKEY = UniqueKeys0.BANK_TRANSACTION_PKEY;
    public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = UniqueKeys0.CUSTOMER_PKEY;
    public static final UniqueKey<CustomerdetailRecord> CUSTOMERDETAIL_PKEY = UniqueKeys0.CUSTOMERDETAIL_PKEY;
    public static final UniqueKey<DepartmentRecord> DEPARTMENT_PKEY = UniqueKeys0.DEPARTMENT_PKEY;
    public static final UniqueKey<EmployeeRecord> EMPLOYEE_PKEY = UniqueKeys0.EMPLOYEE_PKEY;
    public static final UniqueKey<ManagerRecord> MANAGER_PKEY = UniqueKeys0.MANAGER_PKEY;
    public static final UniqueKey<OfficeRecord> OFFICE_PKEY = UniqueKeys0.OFFICE_PKEY;
    public static final UniqueKey<OfficeHasManagerRecord> OFFICES_MANAGERS_PKEY = UniqueKeys0.OFFICES_MANAGERS_PKEY;
    public static final UniqueKey<OrderRecord> ORDER_PKEY = UniqueKeys0.ORDER_PKEY;
    public static final UniqueKey<OrderdetailRecord> ORDERDETAIL_PKEY = UniqueKeys0.ORDERDETAIL_PKEY;
    public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = UniqueKeys0.PAYMENT_PKEY;
    public static final UniqueKey<PaymentRecord> UNIQUE_CHECK_NUMBER = UniqueKeys0.UNIQUE_CHECK_NUMBER;
    public static final UniqueKey<ProductRecord> PRODUCT_PKEY = UniqueKeys0.PRODUCT_PKEY;
    public static final UniqueKey<ProductlineRecord> PRODUCTLINE_PKEY = UniqueKeys0.PRODUCTLINE_PKEY;
    public static final UniqueKey<ProductlineRecord> UNIQUE_PRODUCT_LINE = UniqueKeys0.UNIQUE_PRODUCT_LINE;
    public static final UniqueKey<ProductlinedetailRecord> PRODUCTLINEDETAIL_PKEY = UniqueKeys0.PRODUCTLINEDETAIL_PKEY;
    public static final UniqueKey<ProductlinedetailRecord> UNIQUE_PRODUCT_LINE_DETAIL = UniqueKeys0.UNIQUE_PRODUCT_LINE_DETAIL;
    public static final UniqueKey<SaleRecord> SALE_PKEY = UniqueKeys0.SALE_PKEY;
    public static final UniqueKey<Top3productRecord> TOP3PRODUCT_PKEY = UniqueKeys0.TOP3PRODUCT_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BankTransactionRecord, PaymentRecord> BANK_TRANSACTION__BANK_TRANSACTION_IBFK_1 = ForeignKeys0.BANK_TRANSACTION__BANK_TRANSACTION_IBFK_1;
    public static final ForeignKey<CustomerRecord, EmployeeRecord> CUSTOMER__CUSTOMERS_IBFK_1 = ForeignKeys0.CUSTOMER__CUSTOMERS_IBFK_1;
    public static final ForeignKey<CustomerdetailRecord, CustomerRecord> CUSTOMERDETAIL__CUSTOMERS_DETAILS_IBFK_1 = ForeignKeys0.CUSTOMERDETAIL__CUSTOMERS_DETAILS_IBFK_1;
    public static final ForeignKey<DepartmentRecord, OfficeRecord> DEPARTMENT__DEPARTMENT_IBFK_1 = ForeignKeys0.DEPARTMENT__DEPARTMENT_IBFK_1;
    public static final ForeignKey<EmployeeRecord, OfficeRecord> EMPLOYEE__EMPLOYEES_IBFK_2 = ForeignKeys0.EMPLOYEE__EMPLOYEES_IBFK_2;
    public static final ForeignKey<EmployeeRecord, EmployeeRecord> EMPLOYEE__EMPLOYEES_IBFK_1 = ForeignKeys0.EMPLOYEE__EMPLOYEES_IBFK_1;
    public static final ForeignKey<OfficeHasManagerRecord, OfficeRecord> OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_OFFICES_OFFICE_CODE_FKEY = ForeignKeys0.OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_OFFICES_OFFICE_CODE_FKEY;
    public static final ForeignKey<OfficeHasManagerRecord, ManagerRecord> OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_MANAGERS_MANAGER_ID_FKEY = ForeignKeys0.OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_MANAGERS_MANAGER_ID_FKEY;
    public static final ForeignKey<OrderRecord, CustomerRecord> ORDER__ORDERS_IBFK_1 = ForeignKeys0.ORDER__ORDERS_IBFK_1;
    public static final ForeignKey<OrderdetailRecord, OrderRecord> ORDERDETAIL__ORDERDETAILS_IBFK_1 = ForeignKeys0.ORDERDETAIL__ORDERDETAILS_IBFK_1;
    public static final ForeignKey<OrderdetailRecord, ProductRecord> ORDERDETAIL__ORDERDETAILS_IBFK_2 = ForeignKeys0.ORDERDETAIL__ORDERDETAILS_IBFK_2;
    public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENT__PAYMENTS_IBFK_1 = ForeignKeys0.PAYMENT__PAYMENTS_IBFK_1;
    public static final ForeignKey<ProductRecord, ProductlineRecord> PRODUCT__PRODUCTS_IBFK_1 = ForeignKeys0.PRODUCT__PRODUCTS_IBFK_1;
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_1 = ForeignKeys0.PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_1;
    public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_2 = ForeignKeys0.PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_2;
    public static final ForeignKey<SaleRecord, EmployeeRecord> SALE__SALES_IBFK_1 = ForeignKeys0.SALE__SALES_IBFK_1;
    public static final ForeignKey<Top3productRecord, ProductRecord> TOP3PRODUCT__TOP3PRODUCT_IBFK_1 = ForeignKeys0.TOP3PRODUCT__TOP3PRODUCT_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BankTransactionRecord, Integer> IDENTITY_BANK_TRANSACTION = Internal.createIdentity(BankTransaction.BANK_TRANSACTION, BankTransaction.BANK_TRANSACTION.TRANSACTION_ID);
        public static Identity<CustomerRecord, Long> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.CUSTOMER_NUMBER);
        public static Identity<DepartmentRecord, Integer> IDENTITY_DEPARTMENT = Internal.createIdentity(Department.DEPARTMENT, Department.DEPARTMENT.DEPARTMENT_ID);
        public static Identity<ManagerRecord, Long> IDENTITY_MANAGER = Internal.createIdentity(Manager.MANAGER, Manager.MANAGER.MANAGER_ID);
        public static Identity<OrderRecord, Long> IDENTITY_ORDER = Internal.createIdentity(Order.ORDER, Order.ORDER.ORDER_ID);
        public static Identity<ProductRecord, Long> IDENTITY_PRODUCT = Internal.createIdentity(Product.PRODUCT, Product.PRODUCT.PRODUCT_ID);
        public static Identity<SaleRecord, Long> IDENTITY_SALE = Internal.createIdentity(Sale.SALE, Sale.SALE.SALE_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BankTransactionRecord> BANK_TRANSACTION_PKEY = Internal.createUniqueKey(BankTransaction.BANK_TRANSACTION, "bank_transaction_pkey", new TableField[] { BankTransaction.BANK_TRANSACTION.TRANSACTION_ID }, true);
        public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = Internal.createUniqueKey(Customer.CUSTOMER, "customer_pkey", new TableField[] { Customer.CUSTOMER.CUSTOMER_NUMBER }, true);
        public static final UniqueKey<CustomerdetailRecord> CUSTOMERDETAIL_PKEY = Internal.createUniqueKey(Customerdetail.CUSTOMERDETAIL, "customerdetail_pkey", new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, true);
        public static final UniqueKey<DepartmentRecord> DEPARTMENT_PKEY = Internal.createUniqueKey(Department.DEPARTMENT, "department_pkey", new TableField[] { Department.DEPARTMENT.DEPARTMENT_ID }, true);
        public static final UniqueKey<EmployeeRecord> EMPLOYEE_PKEY = Internal.createUniqueKey(Employee.EMPLOYEE, "employee_pkey", new TableField[] { Employee.EMPLOYEE.EMPLOYEE_NUMBER }, true);
        public static final UniqueKey<ManagerRecord> MANAGER_PKEY = Internal.createUniqueKey(Manager.MANAGER, "manager_pkey", new TableField[] { Manager.MANAGER.MANAGER_ID }, true);
        public static final UniqueKey<OfficeRecord> OFFICE_PKEY = Internal.createUniqueKey(Office.OFFICE, "office_pkey", new TableField[] { Office.OFFICE.OFFICE_CODE }, true);
        public static final UniqueKey<OfficeHasManagerRecord> OFFICES_MANAGERS_PKEY = Internal.createUniqueKey(OfficeHasManager.OFFICE_HAS_MANAGER, "offices_managers_pkey", new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE, OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, true);
        public static final UniqueKey<OrderRecord> ORDER_PKEY = Internal.createUniqueKey(Order.ORDER, "order_pkey", new TableField[] { Order.ORDER.ORDER_ID }, true);
        public static final UniqueKey<OrderdetailRecord> ORDERDETAIL_PKEY = Internal.createUniqueKey(Orderdetail.ORDERDETAIL, "orderdetail_pkey", new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID, Orderdetail.ORDERDETAIL.PRODUCT_ID }, true);
        public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = Internal.createUniqueKey(Payment.PAYMENT, "payment_pkey", new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER, Payment.PAYMENT.CHECK_NUMBER }, true);
        public static final UniqueKey<PaymentRecord> UNIQUE_CHECK_NUMBER = Internal.createUniqueKey(Payment.PAYMENT, "unique_check_number", new TableField[] { Payment.PAYMENT.CHECK_NUMBER }, true);
        public static final UniqueKey<ProductRecord> PRODUCT_PKEY = Internal.createUniqueKey(Product.PRODUCT, "product_pkey", new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);
        public static final UniqueKey<ProductlineRecord> PRODUCTLINE_PKEY = Internal.createUniqueKey(Productline.PRODUCTLINE, "productline_pkey", new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE, Productline.PRODUCTLINE.CODE }, true);
        public static final UniqueKey<ProductlineRecord> UNIQUE_PRODUCT_LINE = Internal.createUniqueKey(Productline.PRODUCTLINE, "unique_product_line", new TableField[] { Productline.PRODUCTLINE.PRODUCT_LINE }, true);
        public static final UniqueKey<ProductlinedetailRecord> PRODUCTLINEDETAIL_PKEY = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, "productlinedetail_pkey", new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, true);
        public static final UniqueKey<ProductlinedetailRecord> UNIQUE_PRODUCT_LINE_DETAIL = Internal.createUniqueKey(Productlinedetail.PRODUCTLINEDETAIL, "unique_product_line_detail", new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, true);
        public static final UniqueKey<SaleRecord> SALE_PKEY = Internal.createUniqueKey(Sale.SALE, "sale_pkey", new TableField[] { Sale.SALE.SALE_ID }, true);
        public static final UniqueKey<Top3productRecord> TOP3PRODUCT_PKEY = Internal.createUniqueKey(Top3product.TOP3PRODUCT, "top3product_pkey", new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<BankTransactionRecord, PaymentRecord> BANK_TRANSACTION__BANK_TRANSACTION_IBFK_1 = Internal.createForeignKey(Keys.PAYMENT_PKEY, BankTransaction.BANK_TRANSACTION, "bank_transaction_ibfk_1", new TableField[] { BankTransaction.BANK_TRANSACTION.CUSTOMER_NUMBER, BankTransaction.BANK_TRANSACTION.CHECK_NUMBER }, true);
        public static final ForeignKey<CustomerRecord, EmployeeRecord> CUSTOMER__CUSTOMERS_IBFK_1 = Internal.createForeignKey(Keys.EMPLOYEE_PKEY, Customer.CUSTOMER, "customers_ibfk_1", new TableField[] { Customer.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER }, true);
        public static final ForeignKey<CustomerdetailRecord, CustomerRecord> CUSTOMERDETAIL__CUSTOMERS_DETAILS_IBFK_1 = Internal.createForeignKey(Keys.CUSTOMER_PKEY, Customerdetail.CUSTOMERDETAIL, "customers_details_ibfk_1", new TableField[] { Customerdetail.CUSTOMERDETAIL.CUSTOMER_NUMBER }, true);
        public static final ForeignKey<DepartmentRecord, OfficeRecord> DEPARTMENT__DEPARTMENT_IBFK_1 = Internal.createForeignKey(Keys.OFFICE_PKEY, Department.DEPARTMENT, "department_ibfk_1", new TableField[] { Department.DEPARTMENT.OFFICE_CODE }, true);
        public static final ForeignKey<EmployeeRecord, OfficeRecord> EMPLOYEE__EMPLOYEES_IBFK_2 = Internal.createForeignKey(Keys.OFFICE_PKEY, Employee.EMPLOYEE, "employees_ibfk_2", new TableField[] { Employee.EMPLOYEE.OFFICE_CODE }, true);
        public static final ForeignKey<EmployeeRecord, EmployeeRecord> EMPLOYEE__EMPLOYEES_IBFK_1 = Internal.createForeignKey(Keys.EMPLOYEE_PKEY, Employee.EMPLOYEE, "employees_ibfk_1", new TableField[] { Employee.EMPLOYEE.REPORTS_TO }, true);
        public static final ForeignKey<OfficeHasManagerRecord, OfficeRecord> OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_OFFICES_OFFICE_CODE_FKEY = Internal.createForeignKey(Keys.OFFICE_PKEY, OfficeHasManager.OFFICE_HAS_MANAGER, "office_has_manager_offices_office_code_fkey", new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.OFFICES_OFFICE_CODE }, true);
        public static final ForeignKey<OfficeHasManagerRecord, ManagerRecord> OFFICE_HAS_MANAGER__OFFICE_HAS_MANAGER_MANAGERS_MANAGER_ID_FKEY = Internal.createForeignKey(Keys.MANAGER_PKEY, OfficeHasManager.OFFICE_HAS_MANAGER, "office_has_manager_managers_manager_id_fkey", new TableField[] { OfficeHasManager.OFFICE_HAS_MANAGER.MANAGERS_MANAGER_ID }, true);
        public static final ForeignKey<OrderRecord, CustomerRecord> ORDER__ORDERS_IBFK_1 = Internal.createForeignKey(Keys.CUSTOMER_PKEY, Order.ORDER, "orders_ibfk_1", new TableField[] { Order.ORDER.CUSTOMER_NUMBER }, true);
        public static final ForeignKey<OrderdetailRecord, OrderRecord> ORDERDETAIL__ORDERDETAILS_IBFK_1 = Internal.createForeignKey(Keys.ORDER_PKEY, Orderdetail.ORDERDETAIL, "orderdetails_ibfk_1", new TableField[] { Orderdetail.ORDERDETAIL.ORDER_ID }, true);
        public static final ForeignKey<OrderdetailRecord, ProductRecord> ORDERDETAIL__ORDERDETAILS_IBFK_2 = Internal.createForeignKey(Keys.PRODUCT_PKEY, Orderdetail.ORDERDETAIL, "orderdetails_ibfk_2", new TableField[] { Orderdetail.ORDERDETAIL.PRODUCT_ID }, true);
        public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENT__PAYMENTS_IBFK_1 = Internal.createForeignKey(Keys.CUSTOMER_PKEY, Payment.PAYMENT, "payments_ibfk_1", new TableField[] { Payment.PAYMENT.CUSTOMER_NUMBER }, true);
        public static final ForeignKey<ProductRecord, ProductlineRecord> PRODUCT__PRODUCTS_IBFK_1 = Internal.createForeignKey(Keys.UNIQUE_PRODUCT_LINE, Product.PRODUCT, "products_ibfk_1", new TableField[] { Product.PRODUCT.PRODUCT_LINE }, true);
        public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_1 = Internal.createForeignKey(Keys.PRODUCTLINE_PKEY, Productlinedetail.PRODUCTLINEDETAIL, "productlinedetail_ibfk_1", new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL.CODE }, true);
        public static final ForeignKey<ProductlinedetailRecord, ProductlineRecord> PRODUCTLINEDETAIL__PRODUCTLINEDETAIL_IBFK_2 = Internal.createForeignKey(Keys.UNIQUE_PRODUCT_LINE, Productlinedetail.PRODUCTLINEDETAIL, "productlinedetail_ibfk_2", new TableField[] { Productlinedetail.PRODUCTLINEDETAIL.PRODUCT_LINE }, true);
        public static final ForeignKey<SaleRecord, EmployeeRecord> SALE__SALES_IBFK_1 = Internal.createForeignKey(Keys.EMPLOYEE_PKEY, Sale.SALE, "sales_ibfk_1", new TableField[] { Sale.SALE.EMPLOYEE_NUMBER }, true);
        public static final ForeignKey<Top3productRecord, ProductRecord> TOP3PRODUCT__TOP3PRODUCT_IBFK_1 = Internal.createForeignKey(Keys.PRODUCT_PKEY, Top3product.TOP3PRODUCT, "top3product_ibfk_1", new TableField[] { Top3product.TOP3PRODUCT.PRODUCT_ID }, true);
    }
}
