/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.time.LocalDate;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import jooq.generated.tables.DailyActivity;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DailyActivityRecord extends UpdatableRecordImpl<DailyActivityRecord> implements Record5<Integer, LocalDate, Double, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.daily_activity.day_id</code>.
     */
    public void setDayId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.daily_activity.day_id</code>.
     */
    public Integer getDayId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.daily_activity.day_date</code>.
     */
    public void setDayDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.daily_activity.day_date</code>.
     */
    @NotNull
    public LocalDate getDayDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.daily_activity.sales</code>.
     */
    public void setSales(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.daily_activity.sales</code>.
     */
    @NotNull
    public Double getSales() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.daily_activity.visitors</code>.
     */
    public void setVisitors(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.daily_activity.visitors</code>.
     */
    @NotNull
    public Double getVisitors() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.daily_activity.conversion</code>.
     */
    public void setConversion(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.daily_activity.conversion</code>.
     */
    @NotNull
    public Double getConversion() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, LocalDate, Double, Double, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, LocalDate, Double, Double, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return DailyActivity.DAILY_ACTIVITY.DAY_ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return DailyActivity.DAILY_ACTIVITY.DAY_DATE;
    }

    @Override
    public Field<Double> field3() {
        return DailyActivity.DAILY_ACTIVITY.SALES;
    }

    @Override
    public Field<Double> field4() {
        return DailyActivity.DAILY_ACTIVITY.VISITORS;
    }

    @Override
    public Field<Double> field5() {
        return DailyActivity.DAILY_ACTIVITY.CONVERSION;
    }

    @Override
    public Integer component1() {
        return getDayId();
    }

    @Override
    public LocalDate component2() {
        return getDayDate();
    }

    @Override
    public Double component3() {
        return getSales();
    }

    @Override
    public Double component4() {
        return getVisitors();
    }

    @Override
    public Double component5() {
        return getConversion();
    }

    @Override
    public Integer value1() {
        return getDayId();
    }

    @Override
    public LocalDate value2() {
        return getDayDate();
    }

    @Override
    public Double value3() {
        return getSales();
    }

    @Override
    public Double value4() {
        return getVisitors();
    }

    @Override
    public Double value5() {
        return getConversion();
    }

    @Override
    public DailyActivityRecord value1(Integer value) {
        setDayId(value);
        return this;
    }

    @Override
    public DailyActivityRecord value2(LocalDate value) {
        setDayDate(value);
        return this;
    }

    @Override
    public DailyActivityRecord value3(Double value) {
        setSales(value);
        return this;
    }

    @Override
    public DailyActivityRecord value4(Double value) {
        setVisitors(value);
        return this;
    }

    @Override
    public DailyActivityRecord value5(Double value) {
        setConversion(value);
        return this;
    }

    @Override
    public DailyActivityRecord values(Integer value1, LocalDate value2, Double value3, Double value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DailyActivityRecord
     */
    public DailyActivityRecord() {
        super(DailyActivity.DAILY_ACTIVITY);
    }

    /**
     * Create a detached, initialised DailyActivityRecord
     */
    public DailyActivityRecord(Integer dayId, LocalDate dayDate, Double sales, Double visitors, Double conversion) {
        super(DailyActivity.DAILY_ACTIVITY);

        setDayId(dayId);
        setDayDate(dayDate);
        setSales(sales);
        setVisitors(visitors);
        setConversion(conversion);
    }
}
