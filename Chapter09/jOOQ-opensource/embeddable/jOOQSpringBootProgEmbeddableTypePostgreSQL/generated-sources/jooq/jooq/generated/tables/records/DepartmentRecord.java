/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.tables.Department;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentRecord extends UpdatableRecordImpl<DepartmentRecord> implements Record16<Integer, String, String, Short, String, String[], Object, Double, Double, Double, Double, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.department.department_id</code>.
     */
    public void setDepartmentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.department.department_id</code>.
     */
    public Integer getDepartmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.department.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.department.name</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.department.phone</code>.
     */
    public void setPhone(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.department.phone</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.department.code</code>.
     */
    public void setCode(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.department.code</code>.
     */
    @NotNull
    public Short getCode() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.department.office_code</code>.
     */
    public void setOfficeCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.department.office_code</code>.
     */
    @NotNull
    @Size(max = 10)
    public String getOfficeCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.department.topic</code>.
     */
    public void setTopic(String[] value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.department.topic</code>.
     */
    public String[] getTopic() {
        return (String[]) get(5);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setDepNetIpv4(Object value) {
        set(6, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getDepNetIpv4() {
        return get(6);
    }

    /**
     * Setter for <code>public.department.local_budget</code>.
     */
    public void setLocalBudget(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.department.local_budget</code>.
     */
    public Double getLocalBudget() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.department.profit</code>.
     */
    public void setProfit(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.department.profit</code>.
     */
    public Double getProfit() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.department.forecast_profit</code>.
     */
    public void setForecastProfit(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.department.forecast_profit</code>.
     */
    public Double getForecastProfit() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.department.cash</code>.
     */
    public void setCash(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.department.cash</code>.
     */
    public Double getCash() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>public.department.accounts_receivable</code>.
     */
    public void setAccountsReceivable(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.department.accounts_receivable</code>.
     */
    public Double getAccountsReceivable() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>public.department.inventories</code>.
     */
    public void setInventories(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.department.inventories</code>.
     */
    public Double getInventories() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>public.department.accounts_payable</code>.
     */
    public void setAccountsPayable(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.department.accounts_payable</code>.
     */
    public Double getAccountsPayable() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>public.department.st_borrowing</code>.
     */
    public void setStBorrowing(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.department.st_borrowing</code>.
     */
    public Double getStBorrowing() {
        return (Double) get(14);
    }

    /**
     * Setter for <code>public.department.accrued_liabilities</code>.
     */
    public void setAccruedLiabilities(Double value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.department.accrued_liabilities</code>.
     */
    public Double getAccruedLiabilities() {
        return (Double) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, Short, String, String[], Object, Double, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, String, String, Short, String, String[], Object, Double, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Department.DEPARTMENT.DEPARTMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return Department.DEPARTMENT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Department.DEPARTMENT.PHONE;
    }

    @Override
    public Field<Short> field4() {
        return Department.DEPARTMENT.CODE;
    }

    @Override
    public Field<String> field5() {
        return Department.DEPARTMENT.OFFICE_CODE;
    }

    @Override
    public Field<String[]> field6() {
        return Department.DEPARTMENT.TOPIC;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field7() {
        return Department.DEPARTMENT.DEP_NET_IPV4;
    }

    @Override
    public Field<Double> field8() {
        return Department.DEPARTMENT.LOCAL_BUDGET;
    }

    @Override
    public Field<Double> field9() {
        return Department.DEPARTMENT.PROFIT;
    }

    @Override
    public Field<Double> field10() {
        return Department.DEPARTMENT.FORECAST_PROFIT;
    }

    @Override
    public Field<Double> field11() {
        return Department.DEPARTMENT.CASH;
    }

    @Override
    public Field<Double> field12() {
        return Department.DEPARTMENT.ACCOUNTS_RECEIVABLE;
    }

    @Override
    public Field<Double> field13() {
        return Department.DEPARTMENT.INVENTORIES;
    }

    @Override
    public Field<Double> field14() {
        return Department.DEPARTMENT.ACCOUNTS_PAYABLE;
    }

    @Override
    public Field<Double> field15() {
        return Department.DEPARTMENT.ST_BORROWING;
    }

    @Override
    public Field<Double> field16() {
        return Department.DEPARTMENT.ACCRUED_LIABILITIES;
    }

    @Override
    public Integer component1() {
        return getDepartmentId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPhone();
    }

    @Override
    public Short component4() {
        return getCode();
    }

    @Override
    public String component5() {
        return getOfficeCode();
    }

    @Override
    public String[] component6() {
        return getTopic();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component7() {
        return getDepNetIpv4();
    }

    @Override
    public Double component8() {
        return getLocalBudget();
    }

    @Override
    public Double component9() {
        return getProfit();
    }

    @Override
    public Double component10() {
        return getForecastProfit();
    }

    @Override
    public Double component11() {
        return getCash();
    }

    @Override
    public Double component12() {
        return getAccountsReceivable();
    }

    @Override
    public Double component13() {
        return getInventories();
    }

    @Override
    public Double component14() {
        return getAccountsPayable();
    }

    @Override
    public Double component15() {
        return getStBorrowing();
    }

    @Override
    public Double component16() {
        return getAccruedLiabilities();
    }

    @Override
    public Integer value1() {
        return getDepartmentId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPhone();
    }

    @Override
    public Short value4() {
        return getCode();
    }

    @Override
    public String value5() {
        return getOfficeCode();
    }

    @Override
    public String[] value6() {
        return getTopic();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value7() {
        return getDepNetIpv4();
    }

    @Override
    public Double value8() {
        return getLocalBudget();
    }

    @Override
    public Double value9() {
        return getProfit();
    }

    @Override
    public Double value10() {
        return getForecastProfit();
    }

    @Override
    public Double value11() {
        return getCash();
    }

    @Override
    public Double value12() {
        return getAccountsReceivable();
    }

    @Override
    public Double value13() {
        return getInventories();
    }

    @Override
    public Double value14() {
        return getAccountsPayable();
    }

    @Override
    public Double value15() {
        return getStBorrowing();
    }

    @Override
    public Double value16() {
        return getAccruedLiabilities();
    }

    @Override
    public DepartmentRecord value1(Integer value) {
        setDepartmentId(value);
        return this;
    }

    @Override
    public DepartmentRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DepartmentRecord value3(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public DepartmentRecord value4(Short value) {
        setCode(value);
        return this;
    }

    @Override
    public DepartmentRecord value5(String value) {
        setOfficeCode(value);
        return this;
    }

    @Override
    public DepartmentRecord value6(String[] value) {
        setTopic(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public DepartmentRecord value7(Object value) {
        setDepNetIpv4(value);
        return this;
    }

    @Override
    public DepartmentRecord value8(Double value) {
        setLocalBudget(value);
        return this;
    }

    @Override
    public DepartmentRecord value9(Double value) {
        setProfit(value);
        return this;
    }

    @Override
    public DepartmentRecord value10(Double value) {
        setForecastProfit(value);
        return this;
    }

    @Override
    public DepartmentRecord value11(Double value) {
        setCash(value);
        return this;
    }

    @Override
    public DepartmentRecord value12(Double value) {
        setAccountsReceivable(value);
        return this;
    }

    @Override
    public DepartmentRecord value13(Double value) {
        setInventories(value);
        return this;
    }

    @Override
    public DepartmentRecord value14(Double value) {
        setAccountsPayable(value);
        return this;
    }

    @Override
    public DepartmentRecord value15(Double value) {
        setStBorrowing(value);
        return this;
    }

    @Override
    public DepartmentRecord value16(Double value) {
        setAccruedLiabilities(value);
        return this;
    }

    @Override
    public DepartmentRecord values(Integer value1, String value2, String value3, Short value4, String value5, String[] value6, Object value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13, Double value14, Double value15, Double value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartmentRecord
     */
    public DepartmentRecord() {
        super(Department.DEPARTMENT);
    }

    /**
     * Create a detached, initialised DepartmentRecord
     */
    public DepartmentRecord(Integer departmentId, String name, String phone, Short code, String officeCode, String[] topic, Object depNetIpv4, Double localBudget, Double profit, Double forecastProfit, Double cash, Double accountsReceivable, Double inventories, Double accountsPayable, Double stBorrowing, Double accruedLiabilities) {
        super(Department.DEPARTMENT);

        setDepartmentId(departmentId);
        setName(name);
        setPhone(phone);
        setCode(code);
        setOfficeCode(officeCode);
        setTopic(topic);
        setDepNetIpv4(depNetIpv4);
        setLocalBudget(localBudget);
        setProfit(profit);
        setForecastProfit(forecastProfit);
        setCash(cash);
        setAccountsReceivable(accountsReceivable);
        setInventories(inventories);
        setAccountsPayable(accountsPayable);
        setStBorrowing(stBorrowing);
        setAccruedLiabilities(accruedLiabilities);
    }
}
