/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.time.LocalDate;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.tables.EmployeeStatus;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeStatusRecord extends UpdatableRecordImpl<EmployeeStatusRecord> implements Record4<Integer, Long, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employee_status.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employee_status.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employee_status.employee_number</code>.
     */
    public void setEmployeeNumber(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employee_status.employee_number</code>.
     */
    @NotNull
    public Long getEmployeeNumber() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.employee_status.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employee_status.status</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employee_status.acquired_date</code>.
     */
    public void setAcquiredDate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employee_status.acquired_date</code>.
     */
    @NotNull
    public LocalDate getAcquiredDate() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Long, String, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Long, String, LocalDate> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EmployeeStatus.EMPLOYEE_STATUS.ID;
    }

    @Override
    public Field<Long> field2() {
        return EmployeeStatus.EMPLOYEE_STATUS.EMPLOYEE_NUMBER;
    }

    @Override
    public Field<String> field3() {
        return EmployeeStatus.EMPLOYEE_STATUS.STATUS;
    }

    @Override
    public Field<LocalDate> field4() {
        return EmployeeStatus.EMPLOYEE_STATUS.ACQUIRED_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getEmployeeNumber();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public LocalDate component4() {
        return getAcquiredDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getEmployeeNumber();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public LocalDate value4() {
        return getAcquiredDate();
    }

    @Override
    public EmployeeStatusRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeStatusRecord value2(Long value) {
        setEmployeeNumber(value);
        return this;
    }

    @Override
    public EmployeeStatusRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public EmployeeStatusRecord value4(LocalDate value) {
        setAcquiredDate(value);
        return this;
    }

    @Override
    public EmployeeStatusRecord values(Integer value1, Long value2, String value3, LocalDate value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeStatusRecord
     */
    public EmployeeStatusRecord() {
        super(EmployeeStatus.EMPLOYEE_STATUS);
    }

    /**
     * Create a detached, initialised EmployeeStatusRecord
     */
    public EmployeeStatusRecord(Integer id, Long employeeNumber, String status, LocalDate acquiredDate) {
        super(EmployeeStatus.EMPLOYEE_STATUS);

        setId(id);
        setEmployeeNumber(employeeNumber);
        setStatus(status);
        setAcquiredDate(acquiredDate);
    }
}
