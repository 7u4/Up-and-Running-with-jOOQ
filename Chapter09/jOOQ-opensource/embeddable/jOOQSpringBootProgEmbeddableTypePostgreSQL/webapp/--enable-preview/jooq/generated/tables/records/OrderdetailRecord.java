/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import jooq.generated.tables.Orderdetail;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderdetailRecord extends UpdatableRecordImpl<OrderdetailRecord> implements Record6<Integer, Long, Long, Integer, BigDecimal, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orderdetail.orderdetail_id</code>.
     */
    public void setOrderdetailId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orderdetail.orderdetail_id</code>.
     */
    public Integer getOrderdetailId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.orderdetail.order_id</code>.
     */
    public void setOrderId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orderdetail.order_id</code>.
     */
    @NotNull
    public Long getOrderId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.orderdetail.product_id</code>.
     */
    public void setProductId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orderdetail.product_id</code>.
     */
    @NotNull
    public Long getProductId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.orderdetail.quantity_ordered</code>.
     */
    public void setQuantityOrdered(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orderdetail.quantity_ordered</code>.
     */
    @NotNull
    public Integer getQuantityOrdered() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.orderdetail.price_each</code>.
     */
    public void setPriceEach(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orderdetail.price_each</code>.
     */
    @NotNull
    public BigDecimal getPriceEach() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.orderdetail.order_line_number</code>.
     */
    public void setOrderLineNumber(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.orderdetail.order_line_number</code>.
     */
    @NotNull
    public Short getOrderLineNumber() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Long, Long, Integer, BigDecimal, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Long, Long, Integer, BigDecimal, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Orderdetail.ORDERDETAIL.ORDERDETAIL_ID;
    }

    @Override
    public Field<Long> field2() {
        return Orderdetail.ORDERDETAIL.ORDER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Orderdetail.ORDERDETAIL.PRODUCT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Orderdetail.ORDERDETAIL.QUANTITY_ORDERED;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Orderdetail.ORDERDETAIL.PRICE_EACH;
    }

    @Override
    public Field<Short> field6() {
        return Orderdetail.ORDERDETAIL.ORDER_LINE_NUMBER;
    }

    @Override
    public Integer component1() {
        return getOrderdetailId();
    }

    @Override
    public Long component2() {
        return getOrderId();
    }

    @Override
    public Long component3() {
        return getProductId();
    }

    @Override
    public Integer component4() {
        return getQuantityOrdered();
    }

    @Override
    public BigDecimal component5() {
        return getPriceEach();
    }

    @Override
    public Short component6() {
        return getOrderLineNumber();
    }

    @Override
    public Integer value1() {
        return getOrderdetailId();
    }

    @Override
    public Long value2() {
        return getOrderId();
    }

    @Override
    public Long value3() {
        return getProductId();
    }

    @Override
    public Integer value4() {
        return getQuantityOrdered();
    }

    @Override
    public BigDecimal value5() {
        return getPriceEach();
    }

    @Override
    public Short value6() {
        return getOrderLineNumber();
    }

    @Override
    public OrderdetailRecord value1(Integer value) {
        setOrderdetailId(value);
        return this;
    }

    @Override
    public OrderdetailRecord value2(Long value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderdetailRecord value3(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public OrderdetailRecord value4(Integer value) {
        setQuantityOrdered(value);
        return this;
    }

    @Override
    public OrderdetailRecord value5(BigDecimal value) {
        setPriceEach(value);
        return this;
    }

    @Override
    public OrderdetailRecord value6(Short value) {
        setOrderLineNumber(value);
        return this;
    }

    @Override
    public OrderdetailRecord values(Integer value1, Long value2, Long value3, Integer value4, BigDecimal value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderdetailRecord
     */
    public OrderdetailRecord() {
        super(Orderdetail.ORDERDETAIL);
    }

    /**
     * Create a detached, initialised OrderdetailRecord
     */
    public OrderdetailRecord(Integer orderdetailId, Long orderId, Long productId, Integer quantityOrdered, BigDecimal priceEach, Short orderLineNumber) {
        super(Orderdetail.ORDERDETAIL);

        setOrderdetailId(orderdetailId);
        setOrderId(orderId);
        setProductId(productId);
        setQuantityOrdered(quantityOrdered);
        setPriceEach(priceEach);
        setOrderLineNumber(orderLineNumber);
    }
}
