/*
 * This file is generated by jOOQ.
 */
package jooq.generated.routines;


import javax.annotation.processing.Generated;

import jooq.generated.Public;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Swap extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>public.swap.x</code>.
     */
    public static final Parameter<Integer> X = Internal.createParameter("x", SQLDataType.INTEGER, false, false);

    /**
     * The parameter <code>public.swap.y</code>.
     */
    public static final Parameter<Integer> Y = Internal.createParameter("y", SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public Swap() {
        super("swap", Public.PUBLIC);

        addInOutParameter(X);
        addInOutParameter(Y);
    }

    /**
     * Set the <code>x</code> parameter IN value to the routine
     */
    public void setX(Integer value) {
        setValue(X, value);
    }

    /**
     * Set the <code>y</code> parameter IN value to the routine
     */
    public void setY(Integer value) {
        setValue(Y, value);
    }

    /**
     * Get the <code>x</code> parameter OUT value from the routine
     */
    public Integer getX() {
        return get(X);
    }

    /**
     * Get the <code>y</code> parameter OUT value from the routine
     */
    public Integer getY() {
        return get(Y);
    }
}
