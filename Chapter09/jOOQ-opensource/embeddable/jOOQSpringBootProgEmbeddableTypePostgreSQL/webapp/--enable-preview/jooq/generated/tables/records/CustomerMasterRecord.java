/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.processing.Generated;
import javax.validation.constraints.Size;

import jooq.generated.tables.CustomerMaster;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerMasterRecord extends TableRecordImpl<CustomerMasterRecord> implements Record7<String, BigDecimal, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.customer_master.customer_name</code>.
     */
    public void setCustomerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.customer_master.customer_name</code>.
     */
    @Size(max = 50)
    public String getCustomerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.customer_master.credit_limit</code>.
     */
    public void setCreditLimit(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.customer_master.credit_limit</code>.
     */
    public BigDecimal getCreditLimit() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.customer_master.city</code>.
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.customer_master.city</code>.
     */
    @Size(max = 50)
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customer_master.country</code>.
     */
    public void setCountry(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.customer_master.country</code>.
     */
    @Size(max = 50)
    public String getCountry() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.customer_master.address_line_first</code>.
     */
    public void setAddressLineFirst(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.customer_master.address_line_first</code>.
     */
    @Size(max = 50)
    public String getAddressLineFirst() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.customer_master.postal_code</code>.
     */
    public void setPostalCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.customer_master.postal_code</code>.
     */
    @Size(max = 15)
    public String getPostalCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.customer_master.state</code>.
     */
    public void setState(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.customer_master.state</code>.
     */
    @Size(max = 50)
    public String getState() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, BigDecimal, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, BigDecimal, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CustomerMaster.CUSTOMER_MASTER.CUSTOMER_NAME;
    }

    @Override
    public Field<BigDecimal> field2() {
        return CustomerMaster.CUSTOMER_MASTER.CREDIT_LIMIT;
    }

    @Override
    public Field<String> field3() {
        return CustomerMaster.CUSTOMER_MASTER.CITY;
    }

    @Override
    public Field<String> field4() {
        return CustomerMaster.CUSTOMER_MASTER.COUNTRY;
    }

    @Override
    public Field<String> field5() {
        return CustomerMaster.CUSTOMER_MASTER.ADDRESS_LINE_FIRST;
    }

    @Override
    public Field<String> field6() {
        return CustomerMaster.CUSTOMER_MASTER.POSTAL_CODE;
    }

    @Override
    public Field<String> field7() {
        return CustomerMaster.CUSTOMER_MASTER.STATE;
    }

    @Override
    public String component1() {
        return getCustomerName();
    }

    @Override
    public BigDecimal component2() {
        return getCreditLimit();
    }

    @Override
    public String component3() {
        return getCity();
    }

    @Override
    public String component4() {
        return getCountry();
    }

    @Override
    public String component5() {
        return getAddressLineFirst();
    }

    @Override
    public String component6() {
        return getPostalCode();
    }

    @Override
    public String component7() {
        return getState();
    }

    @Override
    public String value1() {
        return getCustomerName();
    }

    @Override
    public BigDecimal value2() {
        return getCreditLimit();
    }

    @Override
    public String value3() {
        return getCity();
    }

    @Override
    public String value4() {
        return getCountry();
    }

    @Override
    public String value5() {
        return getAddressLineFirst();
    }

    @Override
    public String value6() {
        return getPostalCode();
    }

    @Override
    public String value7() {
        return getState();
    }

    @Override
    public CustomerMasterRecord value1(String value) {
        setCustomerName(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value2(BigDecimal value) {
        setCreditLimit(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value3(String value) {
        setCity(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value4(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value5(String value) {
        setAddressLineFirst(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value6(String value) {
        setPostalCode(value);
        return this;
    }

    @Override
    public CustomerMasterRecord value7(String value) {
        setState(value);
        return this;
    }

    @Override
    public CustomerMasterRecord values(String value1, BigDecimal value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerMasterRecord
     */
    public CustomerMasterRecord() {
        super(CustomerMaster.CUSTOMER_MASTER);
    }

    /**
     * Create a detached, initialised CustomerMasterRecord
     */
    public CustomerMasterRecord(String customerName, BigDecimal creditLimit, String city, String country, String addressLineFirst, String postalCode, String state) {
        super(CustomerMaster.CUSTOMER_MASTER);

        setCustomerName(customerName);
        setCreditLimit(creditLimit);
        setCity(city);
        setCountry(country);
        setAddressLineFirst(addressLineFirst);
        setPostalCode(postalCode);
        setState(state);
    }
}
