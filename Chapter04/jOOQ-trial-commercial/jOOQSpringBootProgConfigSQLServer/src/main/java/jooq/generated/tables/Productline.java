/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import jooq.generated.Keys;
import jooq.generated.System;
import jooq.generated.tables.records.ProductlineRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-19T14:04:39.558Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Productline extends TableImpl<ProductlineRecord> {

    private static final long serialVersionUID = 2075473273;

    /**
     * The reference instance of <code>SYSTEM.PRODUCTLINE</code>
     */
    public static final Productline PRODUCTLINE = new Productline();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductlineRecord> getRecordType() {
        return ProductlineRecord.class;
    }

    /**
     * The column <code>SYSTEM.PRODUCTLINE.PRODUCT_LINE</code>.
     */
    public final TableField<ProductlineRecord, String> PRODUCT_LINE = createField(DSL.name("PRODUCT_LINE"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>SYSTEM.PRODUCTLINE.TEXT_DESCRIPTION</code>.
     */
    public final TableField<ProductlineRecord, String> TEXT_DESCRIPTION = createField(DSL.name("TEXT_DESCRIPTION"), org.jooq.impl.SQLDataType.VARCHAR(4000).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>SYSTEM.PRODUCTLINE.HTML_DESCRIPTION</code>.
     */
    public final TableField<ProductlineRecord, String> HTML_DESCRIPTION = createField(DSL.name("HTML_DESCRIPTION"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>SYSTEM.PRODUCTLINE.IMAGE</code>.
     */
    public final TableField<ProductlineRecord, byte[]> IMAGE = createField(DSL.name("IMAGE"), org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>SYSTEM.PRODUCTLINE</code> table reference
     */
    public Productline() {
        this(DSL.name("PRODUCTLINE"), null);
    }

    /**
     * Create an aliased <code>SYSTEM.PRODUCTLINE</code> table reference
     */
    public Productline(String alias) {
        this(DSL.name(alias), PRODUCTLINE);
    }

    /**
     * Create an aliased <code>SYSTEM.PRODUCTLINE</code> table reference
     */
    public Productline(Name alias) {
        this(alias, PRODUCTLINE);
    }

    private Productline(Name alias, Table<ProductlineRecord> aliased) {
        this(alias, aliased, null);
    }

    private Productline(Name alias, Table<ProductlineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Productline(Table<O> child, ForeignKey<O, ProductlineRecord> key) {
        super(child, key, PRODUCTLINE);
    }

    @Override
    public Schema getSchema() {
        return System.SYSTEM;
    }

    @Override
    public UniqueKey<ProductlineRecord> getPrimaryKey() {
        return Keys.SYS_C0011275;
    }

    @Override
    public List<UniqueKey<ProductlineRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductlineRecord>>asList(Keys.SYS_C0011275);
    }

    @Override
    public Productline as(String alias) {
        return new Productline(DSL.name(alias), this);
    }

    @Override
    public Productline as(Name alias) {
        return new Productline(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Productline rename(String name) {
        return new Productline(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Productline rename(Name name) {
        return new Productline(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
