/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.daos;


import java.math.BigDecimal;
import java.util.List;

import javax.annotation.processing.Generated;

import jooq.generated.master.dbo.tables.Orderdetails;
import jooq.generated.master.dbo.tables.pojos.JooqOrderdetails;
import jooq.generated.master.dbo.tables.records.OrderdetailsRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OrderdetailsRepository extends DAOImpl<OrderdetailsRecord, JooqOrderdetails, Record2<Integer, Integer>> {

    /**
     * Create a new OrderdetailsRepository without any configuration
     */
    public OrderdetailsRepository() {
        super(Orderdetails.ORDERDETAILS, JooqOrderdetails.class);
    }

    /**
     * Create a new OrderdetailsRepository with an attached configuration
     */
    @Autowired
    public OrderdetailsRepository(Configuration configuration) {
        super(Orderdetails.ORDERDETAILS, JooqOrderdetails.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(JooqOrderdetails object) {
        return compositeKeyRecord(object.getOrderid(), object.getProductid());
    }

    /**
     * Fetch records that have <code>orderId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOrderdetails> fetchRangeOfOrderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Orderdetails.ORDERDETAILS.ORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderId IN (values)</code>
     */
    public List<JooqOrderdetails> fetchByOrderid(Integer... values) {
        return fetch(Orderdetails.ORDERDETAILS.ORDERID, values);
    }

    /**
     * Fetch records that have <code>productId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOrderdetails> fetchRangeOfProductid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Orderdetails.ORDERDETAILS.PRODUCTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>productId IN (values)</code>
     */
    public List<JooqOrderdetails> fetchByProductid(Integer... values) {
        return fetch(Orderdetails.ORDERDETAILS.PRODUCTID, values);
    }

    /**
     * Fetch records that have <code>quantityOrdered BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOrderdetails> fetchRangeOfQuantityordered(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Orderdetails.ORDERDETAILS.QUANTITYORDERED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantityOrdered IN (values)</code>
     */
    public List<JooqOrderdetails> fetchByQuantityordered(Integer... values) {
        return fetch(Orderdetails.ORDERDETAILS.QUANTITYORDERED, values);
    }

    /**
     * Fetch records that have <code>priceEach BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOrderdetails> fetchRangeOfPriceeach(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Orderdetails.ORDERDETAILS.PRICEEACH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>priceEach IN (values)</code>
     */
    public List<JooqOrderdetails> fetchByPriceeach(BigDecimal... values) {
        return fetch(Orderdetails.ORDERDETAILS.PRICEEACH, values);
    }

    /**
     * Fetch records that have <code>orderLineNumber BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOrderdetails> fetchRangeOfOrderlinenumber(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(Orderdetails.ORDERDETAILS.ORDERLINENUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderLineNumber IN (values)</code>
     */
    public List<JooqOrderdetails> fetchByOrderlinenumber(Short... values) {
        return fetch(Orderdetails.ORDERDETAILS.ORDERLINENUMBER, values);
    }
}
