/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.records;


import java.time.LocalDate;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.master.dbo.tables.Orders;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record7<Integer, LocalDate, LocalDate, LocalDate, String, String, Integer> {

    private static final long serialVersionUID = 1215901241;

    /**
     * Setter for <code>master.dbo.orders.orderId</code>.
     */
    public void setOrderid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>master.dbo.orders.orderId</code>.
     */
    public Integer getOrderid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>master.dbo.orders.orderDate</code>.
     */
    public void setOrderdate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>master.dbo.orders.orderDate</code>.
     */
    @NotNull
    public LocalDate getOrderdate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>master.dbo.orders.requiredDate</code>.
     */
    public void setRequireddate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>master.dbo.orders.requiredDate</code>.
     */
    @NotNull
    public LocalDate getRequireddate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>master.dbo.orders.shippedDate</code>.
     */
    public void setShippeddate(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>master.dbo.orders.shippedDate</code>.
     */
    public LocalDate getShippeddate() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>master.dbo.orders.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>master.dbo.orders.status</code>.
     */
    @NotNull
    @Size(max = 15)
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>master.dbo.orders.comments</code>.
     */
    public void setComments(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>master.dbo.orders.comments</code>.
     */
    public String getComments() {
        return (String) get(5);
    }

    /**
     * Setter for <code>master.dbo.orders.customerNumber</code>.
     */
    public void setCustomernumber(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>master.dbo.orders.customerNumber</code>.
     */
    @NotNull
    public Integer getCustomernumber() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDate, LocalDate, LocalDate, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDate, LocalDate, LocalDate, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Orders.ORDERS.ORDERID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Orders.ORDERS.ORDERDATE;
    }

    @Override
    public Field<LocalDate> field3() {
        return Orders.ORDERS.REQUIREDDATE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Orders.ORDERS.SHIPPEDDATE;
    }

    @Override
    public Field<String> field5() {
        return Orders.ORDERS.STATUS;
    }

    @Override
    public Field<String> field6() {
        return Orders.ORDERS.COMMENTS;
    }

    @Override
    public Field<Integer> field7() {
        return Orders.ORDERS.CUSTOMERNUMBER;
    }

    @Override
    public Integer component1() {
        return getOrderid();
    }

    @Override
    public LocalDate component2() {
        return getOrderdate();
    }

    @Override
    public LocalDate component3() {
        return getRequireddate();
    }

    @Override
    public LocalDate component4() {
        return getShippeddate();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getComments();
    }

    @Override
    public Integer component7() {
        return getCustomernumber();
    }

    @Override
    public Integer value1() {
        return getOrderid();
    }

    @Override
    public LocalDate value2() {
        return getOrderdate();
    }

    @Override
    public LocalDate value3() {
        return getRequireddate();
    }

    @Override
    public LocalDate value4() {
        return getShippeddate();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getComments();
    }

    @Override
    public Integer value7() {
        return getCustomernumber();
    }

    @Override
    public OrdersRecord value1(Integer value) {
        setOrderid(value);
        return this;
    }

    @Override
    public OrdersRecord value2(LocalDate value) {
        setOrderdate(value);
        return this;
    }

    @Override
    public OrdersRecord value3(LocalDate value) {
        setRequireddate(value);
        return this;
    }

    @Override
    public OrdersRecord value4(LocalDate value) {
        setShippeddate(value);
        return this;
    }

    @Override
    public OrdersRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OrdersRecord value6(String value) {
        setComments(value);
        return this;
    }

    @Override
    public OrdersRecord value7(Integer value) {
        setCustomernumber(value);
        return this;
    }

    @Override
    public OrdersRecord values(Integer value1, LocalDate value2, LocalDate value3, LocalDate value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Integer orderid, LocalDate orderdate, LocalDate requireddate, LocalDate shippeddate, String status, String comments, Integer customernumber) {
        super(Orders.ORDERS);

        set(0, orderid);
        set(1, orderdate);
        set(2, requireddate);
        set(3, shippeddate);
        set(4, status);
        set(5, comments);
        set(6, customernumber);
    }
}
