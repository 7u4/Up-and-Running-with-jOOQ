/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.daos;


import java.util.List;

import javax.annotation.processing.Generated;

import jooq.generated.master.dbo.tables.OfficesHasManagers;
import jooq.generated.master.dbo.tables.pojos.JooqOfficesHasManagers;
import jooq.generated.master.dbo.tables.records.OfficesHasManagersRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OfficesHasManagersRepository extends DAOImpl<OfficesHasManagersRecord, JooqOfficesHasManagers, Record2<String, Integer>> {

    /**
     * Create a new OfficesHasManagersRepository without any configuration
     */
    public OfficesHasManagersRepository() {
        super(OfficesHasManagers.OFFICES_HAS_MANAGERS, JooqOfficesHasManagers.class);
    }

    /**
     * Create a new OfficesHasManagersRepository with an attached configuration
     */
    @Autowired
    public OfficesHasManagersRepository(Configuration configuration) {
        super(OfficesHasManagers.OFFICES_HAS_MANAGERS, JooqOfficesHasManagers.class, configuration);
    }

    @Override
    public Record2<String, Integer> getId(JooqOfficesHasManagers object) {
        return compositeKeyRecord(object.getOfficecode(), object.getManagerid());
    }

    /**
     * Fetch records that have <code>officeCode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOfficesHasManagers> fetchRangeOfOfficecode(String lowerInclusive, String upperInclusive) {
        return fetchRange(OfficesHasManagers.OFFICES_HAS_MANAGERS.OFFICECODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>officeCode IN (values)</code>
     */
    public List<JooqOfficesHasManagers> fetchByOfficecode(String... values) {
        return fetch(OfficesHasManagers.OFFICES_HAS_MANAGERS.OFFICECODE, values);
    }

    /**
     * Fetch records that have <code>managerId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqOfficesHasManagers> fetchRangeOfManagerid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(OfficesHasManagers.OFFICES_HAS_MANAGERS.MANAGERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>managerId IN (values)</code>
     */
    public List<JooqOfficesHasManagers> fetchByManagerid(Integer... values) {
        return fetch(OfficesHasManagers.OFFICES_HAS_MANAGERS.MANAGERID, values);
    }
}
