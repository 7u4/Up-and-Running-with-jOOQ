/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.records;


import java.math.BigDecimal;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import jooq.generated.master.dbo.tables.Orderdetails;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderdetailsRecord extends UpdatableRecordImpl<OrderdetailsRecord> implements Record5<Integer, Integer, Integer, BigDecimal, Short> {

    private static final long serialVersionUID = -2131111125;

    /**
     * Setter for <code>master.dbo.orderdetails.orderId</code>.
     */
    public void setOrderid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>master.dbo.orderdetails.orderId</code>.
     */
    @NotNull
    public Integer getOrderid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>master.dbo.orderdetails.productId</code>.
     */
    public void setProductid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>master.dbo.orderdetails.productId</code>.
     */
    @NotNull
    public Integer getProductid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>master.dbo.orderdetails.quantityOrdered</code>.
     */
    public void setQuantityordered(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>master.dbo.orderdetails.quantityOrdered</code>.
     */
    @NotNull
    public Integer getQuantityordered() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>master.dbo.orderdetails.priceEach</code>.
     */
    public void setPriceeach(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>master.dbo.orderdetails.priceEach</code>.
     */
    @NotNull
    public BigDecimal getPriceeach() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>master.dbo.orderdetails.orderLineNumber</code>.
     */
    public void setOrderlinenumber(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>master.dbo.orderdetails.orderLineNumber</code>.
     */
    @NotNull
    public Short getOrderlinenumber() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, BigDecimal, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, BigDecimal, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Orderdetails.ORDERDETAILS.ORDERID;
    }

    @Override
    public Field<Integer> field2() {
        return Orderdetails.ORDERDETAILS.PRODUCTID;
    }

    @Override
    public Field<Integer> field3() {
        return Orderdetails.ORDERDETAILS.QUANTITYORDERED;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Orderdetails.ORDERDETAILS.PRICEEACH;
    }

    @Override
    public Field<Short> field5() {
        return Orderdetails.ORDERDETAILS.ORDERLINENUMBER;
    }

    @Override
    public Integer component1() {
        return getOrderid();
    }

    @Override
    public Integer component2() {
        return getProductid();
    }

    @Override
    public Integer component3() {
        return getQuantityordered();
    }

    @Override
    public BigDecimal component4() {
        return getPriceeach();
    }

    @Override
    public Short component5() {
        return getOrderlinenumber();
    }

    @Override
    public Integer value1() {
        return getOrderid();
    }

    @Override
    public Integer value2() {
        return getProductid();
    }

    @Override
    public Integer value3() {
        return getQuantityordered();
    }

    @Override
    public BigDecimal value4() {
        return getPriceeach();
    }

    @Override
    public Short value5() {
        return getOrderlinenumber();
    }

    @Override
    public OrderdetailsRecord value1(Integer value) {
        setOrderid(value);
        return this;
    }

    @Override
    public OrderdetailsRecord value2(Integer value) {
        setProductid(value);
        return this;
    }

    @Override
    public OrderdetailsRecord value3(Integer value) {
        setQuantityordered(value);
        return this;
    }

    @Override
    public OrderdetailsRecord value4(BigDecimal value) {
        setPriceeach(value);
        return this;
    }

    @Override
    public OrderdetailsRecord value5(Short value) {
        setOrderlinenumber(value);
        return this;
    }

    @Override
    public OrderdetailsRecord values(Integer value1, Integer value2, Integer value3, BigDecimal value4, Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderdetailsRecord
     */
    public OrderdetailsRecord() {
        super(Orderdetails.ORDERDETAILS);
    }

    /**
     * Create a detached, initialised OrderdetailsRecord
     */
    public OrderdetailsRecord(Integer orderid, Integer productid, Integer quantityordered, BigDecimal priceeach, Short orderlinenumber) {
        super(Orderdetails.ORDERDETAILS);

        set(0, orderid);
        set(1, productid);
        set(2, quantityordered);
        set(3, priceeach);
        set(4, orderlinenumber);
    }
}
