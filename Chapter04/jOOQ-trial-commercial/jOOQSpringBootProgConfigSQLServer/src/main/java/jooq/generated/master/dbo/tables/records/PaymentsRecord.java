/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.master.dbo.tables.Payments;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentsRecord extends UpdatableRecordImpl<PaymentsRecord> implements Record4<Integer, String, LocalDate, BigDecimal> {

    private static final long serialVersionUID = -686962461;

    /**
     * Setter for <code>master.dbo.payments.customerNumber</code>.
     */
    public void setCustomernumber(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>master.dbo.payments.customerNumber</code>.
     */
    @NotNull
    public Integer getCustomernumber() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>master.dbo.payments.checkNumber</code>.
     */
    public void setChecknumber(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>master.dbo.payments.checkNumber</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getChecknumber() {
        return (String) get(1);
    }

    /**
     * Setter for <code>master.dbo.payments.paymentDate</code>.
     */
    public void setPaymentdate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>master.dbo.payments.paymentDate</code>.
     */
    @NotNull
    public LocalDate getPaymentdate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>master.dbo.payments.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>master.dbo.payments.amount</code>.
     */
    @NotNull
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDate, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDate, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Payments.PAYMENTS.CUSTOMERNUMBER;
    }

    @Override
    public Field<String> field2() {
        return Payments.PAYMENTS.CHECKNUMBER;
    }

    @Override
    public Field<LocalDate> field3() {
        return Payments.PAYMENTS.PAYMENTDATE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Payments.PAYMENTS.AMOUNT;
    }

    @Override
    public Integer component1() {
        return getCustomernumber();
    }

    @Override
    public String component2() {
        return getChecknumber();
    }

    @Override
    public LocalDate component3() {
        return getPaymentdate();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public Integer value1() {
        return getCustomernumber();
    }

    @Override
    public String value2() {
        return getChecknumber();
    }

    @Override
    public LocalDate value3() {
        return getPaymentdate();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public PaymentsRecord value1(Integer value) {
        setCustomernumber(value);
        return this;
    }

    @Override
    public PaymentsRecord value2(String value) {
        setChecknumber(value);
        return this;
    }

    @Override
    public PaymentsRecord value3(LocalDate value) {
        setPaymentdate(value);
        return this;
    }

    @Override
    public PaymentsRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public PaymentsRecord values(Integer value1, String value2, LocalDate value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentsRecord
     */
    public PaymentsRecord() {
        super(Payments.PAYMENTS);
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(Integer customernumber, String checknumber, LocalDate paymentdate, BigDecimal amount) {
        super(Payments.PAYMENTS);

        set(0, customernumber);
        set(1, checknumber);
        set(2, paymentdate);
        set(3, amount);
    }
}
