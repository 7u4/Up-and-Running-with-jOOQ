/*
 * This file is generated by jOOQ.
 */
package jooq.generated.master.dbo.tables.records;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;

import jooq.generated.master.dbo.tables.SptMonitor;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-31T06:19:36.439Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SptMonitorRecord extends TableRecordImpl<SptMonitorRecord> implements Record11<LocalDateTime, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 647792645;

    /**
     * Setter for <code>master.dbo.spt_monitor.lastrun</code>.
     */
    public void setLastrun(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.lastrun</code>.
     */
    @NotNull
    public LocalDateTime getLastrun() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.cpu_busy</code>.
     */
    public void setCpuBusy(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.cpu_busy</code>.
     */
    @NotNull
    public Integer getCpuBusy() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.io_busy</code>.
     */
    public void setIoBusy(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.io_busy</code>.
     */
    @NotNull
    public Integer getIoBusy() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.idle</code>.
     */
    public void setIdle(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.idle</code>.
     */
    @NotNull
    public Integer getIdle() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.pack_received</code>.
     */
    public void setPackReceived(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.pack_received</code>.
     */
    @NotNull
    public Integer getPackReceived() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.pack_sent</code>.
     */
    public void setPackSent(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.pack_sent</code>.
     */
    @NotNull
    public Integer getPackSent() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.connections</code>.
     */
    public void setConnections(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.connections</code>.
     */
    @NotNull
    public Integer getConnections() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.pack_errors</code>.
     */
    public void setPackErrors(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.pack_errors</code>.
     */
    @NotNull
    public Integer getPackErrors() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.total_read</code>.
     */
    public void setTotalRead(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.total_read</code>.
     */
    @NotNull
    public Integer getTotalRead() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.total_write</code>.
     */
    public void setTotalWrite(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.total_write</code>.
     */
    @NotNull
    public Integer getTotalWrite() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>master.dbo.spt_monitor.total_errors</code>.
     */
    public void setTotalErrors(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>master.dbo.spt_monitor.total_errors</code>.
     */
    @NotNull
    public Integer getTotalErrors() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<LocalDateTime, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<LocalDateTime, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return SptMonitor.SPT_MONITOR.LASTRUN;
    }

    @Override
    public Field<Integer> field2() {
        return SptMonitor.SPT_MONITOR.CPU_BUSY;
    }

    @Override
    public Field<Integer> field3() {
        return SptMonitor.SPT_MONITOR.IO_BUSY;
    }

    @Override
    public Field<Integer> field4() {
        return SptMonitor.SPT_MONITOR.IDLE;
    }

    @Override
    public Field<Integer> field5() {
        return SptMonitor.SPT_MONITOR.PACK_RECEIVED;
    }

    @Override
    public Field<Integer> field6() {
        return SptMonitor.SPT_MONITOR.PACK_SENT;
    }

    @Override
    public Field<Integer> field7() {
        return SptMonitor.SPT_MONITOR.CONNECTIONS;
    }

    @Override
    public Field<Integer> field8() {
        return SptMonitor.SPT_MONITOR.PACK_ERRORS;
    }

    @Override
    public Field<Integer> field9() {
        return SptMonitor.SPT_MONITOR.TOTAL_READ;
    }

    @Override
    public Field<Integer> field10() {
        return SptMonitor.SPT_MONITOR.TOTAL_WRITE;
    }

    @Override
    public Field<Integer> field11() {
        return SptMonitor.SPT_MONITOR.TOTAL_ERRORS;
    }

    @Override
    public LocalDateTime component1() {
        return getLastrun();
    }

    @Override
    public Integer component2() {
        return getCpuBusy();
    }

    @Override
    public Integer component3() {
        return getIoBusy();
    }

    @Override
    public Integer component4() {
        return getIdle();
    }

    @Override
    public Integer component5() {
        return getPackReceived();
    }

    @Override
    public Integer component6() {
        return getPackSent();
    }

    @Override
    public Integer component7() {
        return getConnections();
    }

    @Override
    public Integer component8() {
        return getPackErrors();
    }

    @Override
    public Integer component9() {
        return getTotalRead();
    }

    @Override
    public Integer component10() {
        return getTotalWrite();
    }

    @Override
    public Integer component11() {
        return getTotalErrors();
    }

    @Override
    public LocalDateTime value1() {
        return getLastrun();
    }

    @Override
    public Integer value2() {
        return getCpuBusy();
    }

    @Override
    public Integer value3() {
        return getIoBusy();
    }

    @Override
    public Integer value4() {
        return getIdle();
    }

    @Override
    public Integer value5() {
        return getPackReceived();
    }

    @Override
    public Integer value6() {
        return getPackSent();
    }

    @Override
    public Integer value7() {
        return getConnections();
    }

    @Override
    public Integer value8() {
        return getPackErrors();
    }

    @Override
    public Integer value9() {
        return getTotalRead();
    }

    @Override
    public Integer value10() {
        return getTotalWrite();
    }

    @Override
    public Integer value11() {
        return getTotalErrors();
    }

    @Override
    public SptMonitorRecord value1(LocalDateTime value) {
        setLastrun(value);
        return this;
    }

    @Override
    public SptMonitorRecord value2(Integer value) {
        setCpuBusy(value);
        return this;
    }

    @Override
    public SptMonitorRecord value3(Integer value) {
        setIoBusy(value);
        return this;
    }

    @Override
    public SptMonitorRecord value4(Integer value) {
        setIdle(value);
        return this;
    }

    @Override
    public SptMonitorRecord value5(Integer value) {
        setPackReceived(value);
        return this;
    }

    @Override
    public SptMonitorRecord value6(Integer value) {
        setPackSent(value);
        return this;
    }

    @Override
    public SptMonitorRecord value7(Integer value) {
        setConnections(value);
        return this;
    }

    @Override
    public SptMonitorRecord value8(Integer value) {
        setPackErrors(value);
        return this;
    }

    @Override
    public SptMonitorRecord value9(Integer value) {
        setTotalRead(value);
        return this;
    }

    @Override
    public SptMonitorRecord value10(Integer value) {
        setTotalWrite(value);
        return this;
    }

    @Override
    public SptMonitorRecord value11(Integer value) {
        setTotalErrors(value);
        return this;
    }

    @Override
    public SptMonitorRecord values(LocalDateTime value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SptMonitorRecord
     */
    public SptMonitorRecord() {
        super(SptMonitor.SPT_MONITOR);
    }

    /**
     * Create a detached, initialised SptMonitorRecord
     */
    public SptMonitorRecord(LocalDateTime lastrun, Integer cpuBusy, Integer ioBusy, Integer idle, Integer packReceived, Integer packSent, Integer connections, Integer packErrors, Integer totalRead, Integer totalWrite, Integer totalErrors) {
        super(SptMonitor.SPT_MONITOR);

        set(0, lastrun);
        set(1, cpuBusy);
        set(2, ioBusy);
        set(3, idle);
        set(4, packReceived);
        set(5, packSent);
        set(6, connections);
        set(7, packErrors);
        set(8, totalRead);
        set(9, totalWrite);
        set(10, totalErrors);
    }
}
