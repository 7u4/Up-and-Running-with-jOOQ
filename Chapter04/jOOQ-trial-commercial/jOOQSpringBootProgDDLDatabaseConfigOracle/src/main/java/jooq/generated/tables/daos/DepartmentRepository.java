/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.daos;


import java.util.List;

import jooq.generated.tables.Department;
import jooq.generated.tables.pojos.JooqDepartment;
import jooq.generated.tables.records.DepartmentRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DepartmentRepository extends DAOImpl<DepartmentRecord, JooqDepartment, Long> {

    /**
     * Create a new DepartmentRepository without any configuration
     */
    public DepartmentRepository() {
        super(Department.DEPARTMENT, JooqDepartment.class);
    }

    /**
     * Create a new DepartmentRepository with an attached configuration
     */
    @Autowired
    public DepartmentRepository(Configuration configuration) {
        super(Department.DEPARTMENT, JooqDepartment.class, configuration);
    }

    @Override
    public Long getId(JooqDepartment object) {
        return object.getDepartmentId();
    }

    /**
     * Fetch records that have <code>DEPARTMENT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqDepartment> fetchRangeOfDepartmentId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Department.DEPARTMENT.DEPARTMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DEPARTMENT_ID IN (values)</code>
     */
    public List<JooqDepartment> fetchByDepartmentId(Long... values) {
        return fetch(Department.DEPARTMENT.DEPARTMENT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>DEPARTMENT_ID = value</code>
     */
    public JooqDepartment fetchOneByDepartmentId(Long value) {
        return fetchOne(Department.DEPARTMENT.DEPARTMENT_ID, value);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqDepartment> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Department.DEPARTMENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<JooqDepartment> fetchByName(String... values) {
        return fetch(Department.DEPARTMENT.NAME, values);
    }

    /**
     * Fetch records that have <code>PHONE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqDepartment> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Department.DEPARTMENT.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PHONE IN (values)</code>
     */
    public List<JooqDepartment> fetchByPhone(String... values) {
        return fetch(Department.DEPARTMENT.PHONE, values);
    }

    /**
     * Fetch records that have <code>CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqDepartment> fetchRangeOfCode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Department.DEPARTMENT.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<JooqDepartment> fetchByCode(Integer... values) {
        return fetch(Department.DEPARTMENT.CODE, values);
    }

    /**
     * Fetch records that have <code>OFFICE_CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqDepartment> fetchRangeOfOfficeCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Department.DEPARTMENT.OFFICE_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>OFFICE_CODE IN (values)</code>
     */
    public List<JooqDepartment> fetchByOfficeCode(String... values) {
        return fetch(Department.DEPARTMENT.OFFICE_CODE, values);
    }
}
