/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import java.math.BigDecimal;

import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.tables.Customer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5",
        "schema version:1.1"
    },
    date = "2020-10-19T14:04:39.558Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record7<Long, String, String, String, String, Long, BigDecimal> {

    private static final long serialVersionUID = 1801013356;

    /**
     * Setter for <code>SYSTEM.CUSTOMER.CUSTOMER_NUMBER</code>.
     */
    public void setCustomerNumber(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.CUSTOMER_NUMBER</code>.
     */
    @NotNull
    public Long getCustomerNumber() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.CUSTOMER_NAME</code>.
     */
    public void setCustomerName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.CUSTOMER_NAME</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getCustomerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.CONTACT_LAST_NAME</code>.
     */
    public void setContactLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.CONTACT_LAST_NAME</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getContactLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.CONTACT_FIRST_NAME</code>.
     */
    public void setContactFirstName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.CONTACT_FIRST_NAME</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getContactFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.PHONE</code>.
     */
    public void setPhone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.PHONE</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getPhone() {
        return (String) get(4);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER</code>.
     */
    public void setSalesRepEmployeeNumber(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER</code>.
     */
    public Long getSalesRepEmployeeNumber() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>SYSTEM.CUSTOMER.CREDIT_LIMIT</code>.
     */
    public void setCreditLimit(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>SYSTEM.CUSTOMER.CREDIT_LIMIT</code>.
     */
    public BigDecimal getCreditLimit() {
        return (BigDecimal) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, Long, BigDecimal> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, Long, BigDecimal> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Customer.CUSTOMER.CUSTOMER_NUMBER;
    }

    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.CUSTOMER_NAME;
    }

    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.CONTACT_LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Customer.CUSTOMER.CONTACT_FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Customer.CUSTOMER.PHONE;
    }

    @Override
    public Field<Long> field6() {
        return Customer.CUSTOMER.SALES_REP_EMPLOYEE_NUMBER;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Customer.CUSTOMER.CREDIT_LIMIT;
    }

    @Override
    public Long component1() {
        return getCustomerNumber();
    }

    @Override
    public String component2() {
        return getCustomerName();
    }

    @Override
    public String component3() {
        return getContactLastName();
    }

    @Override
    public String component4() {
        return getContactFirstName();
    }

    @Override
    public String component5() {
        return getPhone();
    }

    @Override
    public Long component6() {
        return getSalesRepEmployeeNumber();
    }

    @Override
    public BigDecimal component7() {
        return getCreditLimit();
    }

    @Override
    public Long value1() {
        return getCustomerNumber();
    }

    @Override
    public String value2() {
        return getCustomerName();
    }

    @Override
    public String value3() {
        return getContactLastName();
    }

    @Override
    public String value4() {
        return getContactFirstName();
    }

    @Override
    public String value5() {
        return getPhone();
    }

    @Override
    public Long value6() {
        return getSalesRepEmployeeNumber();
    }

    @Override
    public BigDecimal value7() {
        return getCreditLimit();
    }

    @Override
    public CustomerRecord value1(Long value) {
        setCustomerNumber(value);
        return this;
    }

    @Override
    public CustomerRecord value2(String value) {
        setCustomerName(value);
        return this;
    }

    @Override
    public CustomerRecord value3(String value) {
        setContactLastName(value);
        return this;
    }

    @Override
    public CustomerRecord value4(String value) {
        setContactFirstName(value);
        return this;
    }

    @Override
    public CustomerRecord value5(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public CustomerRecord value6(Long value) {
        setSalesRepEmployeeNumber(value);
        return this;
    }

    @Override
    public CustomerRecord value7(BigDecimal value) {
        setCreditLimit(value);
        return this;
    }

    @Override
    public CustomerRecord values(Long value1, String value2, String value3, String value4, String value5, Long value6, BigDecimal value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Long customerNumber, String customerName, String contactLastName, String contactFirstName, String phone, Long salesRepEmployeeNumber, BigDecimal creditLimit) {
        super(Customer.CUSTOMER);

        set(0, customerNumber);
        set(1, customerName);
        set(2, contactLastName);
        set(3, contactFirstName);
        set(4, phone);
        set(5, salesRepEmployeeNumber);
        set(6, creditLimit);
    }
}
