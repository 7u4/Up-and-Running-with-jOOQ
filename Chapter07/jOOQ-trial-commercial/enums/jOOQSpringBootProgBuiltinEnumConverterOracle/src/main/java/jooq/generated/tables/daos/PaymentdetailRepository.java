/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.daos;


import java.util.List;

import javax.annotation.processing.Generated;

import jooq.generated.tables.Paymentdetail;
import jooq.generated.tables.pojos.JooqPaymentdetail;
import jooq.generated.tables.records.PaymentdetailRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.4",
        "schema version:1.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PaymentdetailRepository extends DAOImpl<PaymentdetailRecord, JooqPaymentdetail, Record2<Long, String>> {

    /**
     * Create a new PaymentdetailRepository without any configuration
     */
    public PaymentdetailRepository() {
        super(Paymentdetail.PAYMENTDETAIL, JooqPaymentdetail.class);
    }

    /**
     * Create a new PaymentdetailRepository with an attached configuration
     */
    @Autowired
    public PaymentdetailRepository(Configuration configuration) {
        super(Paymentdetail.PAYMENTDETAIL, JooqPaymentdetail.class, configuration);
    }

    @Override
    public Record2<Long, String> getId(JooqPaymentdetail object) {
        return compositeKeyRecord(object.getCustomerNumber(), object.getCheckNumber());
    }

    /**
     * Fetch records that have <code>CUSTOMER_NUMBER BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqPaymentdetail> fetchRangeOfCustomerNumber(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Paymentdetail.PAYMENTDETAIL.CUSTOMER_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CUSTOMER_NUMBER IN (values)</code>
     */
    public List<JooqPaymentdetail> fetchByCustomerNumber(Long... values) {
        return fetch(Paymentdetail.PAYMENTDETAIL.CUSTOMER_NUMBER, values);
    }

    /**
     * Fetch records that have <code>CHECK_NUMBER BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqPaymentdetail> fetchRangeOfCheckNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Paymentdetail.PAYMENTDETAIL.CHECK_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CHECK_NUMBER IN (values)</code>
     */
    public List<JooqPaymentdetail> fetchByCheckNumber(String... values) {
        return fetch(Paymentdetail.PAYMENTDETAIL.CHECK_NUMBER, values);
    }

    /**
     * Fetch records that have <code>BANK_NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqPaymentdetail> fetchRangeOfBankName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Paymentdetail.PAYMENTDETAIL.BANK_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BANK_NAME IN (values)</code>
     */
    public List<JooqPaymentdetail> fetchByBankName(String... values) {
        return fetch(Paymentdetail.PAYMENTDETAIL.BANK_NAME, values);
    }

    /**
     * Fetch records that have <code>BANK_IBAN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqPaymentdetail> fetchRangeOfBankIban(String lowerInclusive, String upperInclusive) {
        return fetchRange(Paymentdetail.PAYMENTDETAIL.BANK_IBAN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BANK_IBAN IN (values)</code>
     */
    public List<JooqPaymentdetail> fetchByBankIban(String... values) {
        return fetch(Paymentdetail.PAYMENTDETAIL.BANK_IBAN, values);
    }

    /**
     * Fetch records that have <code>TRANSACTION_TYPE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JooqPaymentdetail> fetchRangeOfTransactionType(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Paymentdetail.PAYMENTDETAIL.TRANSACTION_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TRANSACTION_TYPE IN (values)</code>
     */
    public List<JooqPaymentdetail> fetchByTransactionType(Byte... values) {
        return fetch(Paymentdetail.PAYMENTDETAIL.TRANSACTION_TYPE, values);
    }
}
