/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import javax.annotation.processing.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import jooq.generated.tables.Employee;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.2",
        "schema version:1.1"
    },
    date = "2020-07-04T08:58:29.902Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record8<Long, String, String, String, String, String, Long, String> {

    private static final long serialVersionUID = -1843850623;

    /**
     * Setter for <code>public.employee.employee_number</code>.
     */
    public void setEmployeeNumber(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employee.employee_number</code>.
     */
    @NotNull
    public Long getEmployeeNumber() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.employee.last_name</code>.
     */
    public void setLastName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employee.last_name</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getLastName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employee.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employee.first_name</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employee.extension</code>.
     */
    public void setExtension(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employee.extension</code>.
     */
    @NotNull
    @Size(max = 10)
    public String getExtension() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.employee.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.employee.email</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.employee.office_code</code>.
     */
    public void setOfficeCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.employee.office_code</code>.
     */
    @NotNull
    @Size(max = 10)
    public String getOfficeCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.employee.reports_to</code>.
     */
    public void setReportsTo(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.employee.reports_to</code>.
     */
    public Long getReportsTo() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.employee.job_title</code>.
     */
    public void setJobTitle(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.employee.job_title</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getJobTitle() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, String, Long, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, String, Long, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Employee.EMPLOYEE.EMPLOYEE_NUMBER;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.LAST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Employee.EMPLOYEE.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Employee.EMPLOYEE.EXTENSION;
    }

    @Override
    public Field<String> field5() {
        return Employee.EMPLOYEE.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return Employee.EMPLOYEE.OFFICE_CODE;
    }

    @Override
    public Field<Long> field7() {
        return Employee.EMPLOYEE.REPORTS_TO;
    }

    @Override
    public Field<String> field8() {
        return Employee.EMPLOYEE.JOB_TITLE;
    }

    @Override
    public Long component1() {
        return getEmployeeNumber();
    }

    @Override
    public String component2() {
        return getLastName();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getExtension();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getOfficeCode();
    }

    @Override
    public Long component7() {
        return getReportsTo();
    }

    @Override
    public String component8() {
        return getJobTitle();
    }

    @Override
    public Long value1() {
        return getEmployeeNumber();
    }

    @Override
    public String value2() {
        return getLastName();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getExtension();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getOfficeCode();
    }

    @Override
    public Long value7() {
        return getReportsTo();
    }

    @Override
    public String value8() {
        return getJobTitle();
    }

    @Override
    public EmployeeRecord value1(Long value) {
        setEmployeeNumber(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public EmployeeRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public EmployeeRecord value4(String value) {
        setExtension(value);
        return this;
    }

    @Override
    public EmployeeRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public EmployeeRecord value6(String value) {
        setOfficeCode(value);
        return this;
    }

    @Override
    public EmployeeRecord value7(Long value) {
        setReportsTo(value);
        return this;
    }

    @Override
    public EmployeeRecord value8(String value) {
        setJobTitle(value);
        return this;
    }

    @Override
    public EmployeeRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Long value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(Long employeeNumber, String lastName, String firstName, String extension, String email, String officeCode, Long reportsTo, String jobTitle) {
        super(Employee.EMPLOYEE);

        set(0, employeeNumber);
        set(1, lastName);
        set(2, firstName);
        set(3, extension);
        set(4, email);
        set(5, officeCode);
        set(6, reportsTo);
        set(7, jobTitle);
    }
}
